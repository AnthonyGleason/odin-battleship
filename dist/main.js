(()=>{"use strict";var e={772:(e,n,t)=>{t.d(n,{Z:()=>f});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),s=t(667),c=t.n(s),A=new URL(t(453),t.b),l=new URL(t(369),t.b),d=new URL(t(101),t.b),u=i()(o()),p=c()(A),h=c()(l),b=c()(d);u.push([e.id,":root{\n    --board-background: url("+p+");\n    --hover: rgb(182, 182, 182);\n}\n\n*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nbody{\n    /* Set the svg background to fill screen*/\n    height: 100vh;\n    background-image: url("+h+");\n    background-size: cover;\n\n    /* set background color behind the waves svg*/\n    background-color: whitesmoke;\n    \n    /* set header above content section */\n    display: flex;\n    flex-direction: column;\n}\n.header{\n    /* sets header to fill 100% width and 20% of the total\n    screen height*/\n    height: 20%;\n\n    /* position header text */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* change font size */\n    font-size: 70px;\n}\n.header img{\n    /* sets title image instead of using src in index.html */\n    content:url("+b+");\n}\n.content{\n    /* sets the content to fill 100% of the remaining space */\n    flex-grow: 1;\n\n    /* positions the content elements to be player || content || cpu */\n    display: flex;\n    justify-content: space-around;\n}\n.player{\n    /* sets each player to fill 100% of the remaining space */\n    flex-grow: 1;\n\n    /* sets the player title above the player board */\n    display: flex;\n    flex-direction: column;\n}\n.player .title{\n    /* Sets the background color for the title div*/\n    background-image: var(--board-background);\n    background-size: cover;\n\n    /* sets the title to be 100% width and 10% player div height */\n    height: 10%;\n\n    /* sets the margin to 50px */\n    margin: 50px;\n\n    /* sets padding to 20px */\n    padding: 20px;\n\n    /* sets border */\n    border: 4px solid black;\n    border-radius: 20px;\n\n    /* positions title */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* font color and size */\n    color: rgb(0, 0, 0);\n    font-size: 30px;\n    font-weight: bold;\n}\n.player .board{\n    /* fills the remaining space with the game board */\n    flex-grow: 1;\n\n    /* sets a margin for the game board */\n    margin: 50px;\n\n    /* sets padding to 20px */\n    padding: 20px;\n    \n    /* sets board background color */\n    background-image: var(--board-background);\n    background-size: cover;\n\n    /* sets border */\n    border: 4px solid black;\n    border-radius: 20px;\n\n    /* positions rows */\n    display: flex;\n    flex-direction: column;\n}\n.player .row{\n    /* grows each row to fit available space on board div */\n    flex-grow: 1;\n\n    display: flex;\n}\n.player .space{\n    border: 2px solid black;\n    flex-grow: 1;\n    /* it is a 10 by 10 grid so we can set the height to be 10% \n    for each space */\n    height: 100%;\n}\n.player .space:hover{\n    background-color: var(--hover);\n}\n.player .board .row .ship{\n    background-color: gray;\n}\n.player .board .row .miss{\n    background-color: white;\n}\n.player .board .row .hit{\n    background-color: red;\n}\n.content-center{\n    /* sets the background color */\n    background-image: var(--board-background);\n    background-size: cover;\n\n    /* sets the border style */\n    border: 4px solid black;\n    border-radius: 20px;\n    /* sets the content-center */\n    width: 10%;\n\n    /* sets padding */\n    padding: 20px;\n    \n    /* sets margin to match the player board sections */\n    margin-top: 10%;\n    margin: 50px;\n    /* positions elements in the center*/\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    flex-direction: column;\n}\n.content-center .content-alerts{\n    /* sets background */\n    background-color: aliceblue;\n\n    /* sets border */\n    border: 2px solid black;\n    border-radius: 5px;\n\n    /* align text to the center */\n    text-align: center;\n}\n\n.content-center .new-game{\n    /* sets background */\n    background-color: aliceblue;\n\n    /* sets border */\n    border: 2px solid black;\n    border-radius: 5px;\n\n    /* sets button dimensions */\n    height: 7%;\n    width: 60%;\n}\n.content-center .new-game:hover{\n    background-color: var(--hover);\n}","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;IACI,2DAAsD;IACtD,2BAA2B;AAC/B;;AAEA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;AACA;IACI,yCAAyC;IACzC,aAAa;IACb,yDAA4C;IAC5C,sBAAsB;;IAEtB,6CAA6C;IAC7C,4BAA4B;;IAE5B,qCAAqC;IACrC,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI;kBACc;IACd,WAAW;;IAEX,yBAAyB;IACzB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;IAEnB,qBAAqB;IACrB,eAAe;AACnB;AACA;IACI,wDAAwD;IACxD,+CAAkC;AACtC;AACA;IACI,yDAAyD;IACzD,YAAY;;IAEZ,kEAAkE;IAClE,aAAa;IACb,6BAA6B;AACjC;AACA;IACI,yDAAyD;IACzD,YAAY;;IAEZ,iDAAiD;IACjD,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI,+CAA+C;IAC/C,yCAAyC;IACzC,sBAAsB;;IAEtB,8DAA8D;IAC9D,WAAW;;IAEX,4BAA4B;IAC5B,YAAY;;IAEZ,yBAAyB;IACzB,aAAa;;IAEb,gBAAgB;IAChB,uBAAuB;IACvB,mBAAmB;;IAEnB,oBAAoB;IACpB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;IAEnB,wBAAwB;IACxB,mBAAmB;IACnB,eAAe;IACf,iBAAiB;AACrB;AACA;IACI,kDAAkD;IAClD,YAAY;;IAEZ,qCAAqC;IACrC,YAAY;;IAEZ,yBAAyB;IACzB,aAAa;;IAEb,gCAAgC;IAChC,yCAAyC;IACzC,sBAAsB;;IAEtB,gBAAgB;IAChB,uBAAuB;IACvB,mBAAmB;;IAEnB,mBAAmB;IACnB,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI,uDAAuD;IACvD,YAAY;;IAEZ,aAAa;AACjB;AACA;IACI,uBAAuB;IACvB,YAAY;IACZ;oBACgB;IAChB,YAAY;AAChB;AACA;IACI,8BAA8B;AAClC;AACA;IACI,sBAAsB;AAC1B;AACA;IACI,uBAAuB;AAC3B;AACA;IACI,qBAAqB;AACzB;AACA;IACI,8BAA8B;IAC9B,yCAAyC;IACzC,sBAAsB;;IAEtB,0BAA0B;IAC1B,uBAAuB;IACvB,mBAAmB;IACnB,4BAA4B;IAC5B,UAAU;;IAEV,iBAAiB;IACjB,aAAa;;IAEb,mDAAmD;IACnD,eAAe;IACf,YAAY;IACZ,oCAAoC;IACpC,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,sBAAsB;AAC1B;AACA;IACI,oBAAoB;IACpB,2BAA2B;;IAE3B,gBAAgB;IAChB,uBAAuB;IACvB,kBAAkB;;IAElB,6BAA6B;IAC7B,kBAAkB;AACtB;;AAEA;IACI,oBAAoB;IACpB,2BAA2B;;IAE3B,gBAAgB;IAChB,uBAAuB;IACvB,kBAAkB;;IAElB,2BAA2B;IAC3B,UAAU;IACV,UAAU;AACd;AACA;IACI,8BAA8B;AAClC",sourcesContent:[":root{\n    --board-background: url('../assets/diamond-plate.jpg');\n    --hover: rgb(182, 182, 182);\n}\n\n*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nbody{\n    /* Set the svg background to fill screen*/\n    height: 100vh;\n    background-image: url('../assets/waves.jpg');\n    background-size: cover;\n\n    /* set background color behind the waves svg*/\n    background-color: whitesmoke;\n    \n    /* set header above content section */\n    display: flex;\n    flex-direction: column;\n}\n.header{\n    /* sets header to fill 100% width and 20% of the total\n    screen height*/\n    height: 20%;\n\n    /* position header text */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* change font size */\n    font-size: 70px;\n}\n.header img{\n    /* sets title image instead of using src in index.html */\n    content:url(\"../assets/title.png\");\n}\n.content{\n    /* sets the content to fill 100% of the remaining space */\n    flex-grow: 1;\n\n    /* positions the content elements to be player || content || cpu */\n    display: flex;\n    justify-content: space-around;\n}\n.player{\n    /* sets each player to fill 100% of the remaining space */\n    flex-grow: 1;\n\n    /* sets the player title above the player board */\n    display: flex;\n    flex-direction: column;\n}\n.player .title{\n    /* Sets the background color for the title div*/\n    background-image: var(--board-background);\n    background-size: cover;\n\n    /* sets the title to be 100% width and 10% player div height */\n    height: 10%;\n\n    /* sets the margin to 50px */\n    margin: 50px;\n\n    /* sets padding to 20px */\n    padding: 20px;\n\n    /* sets border */\n    border: 4px solid black;\n    border-radius: 20px;\n\n    /* positions title */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* font color and size */\n    color: rgb(0, 0, 0);\n    font-size: 30px;\n    font-weight: bold;\n}\n.player .board{\n    /* fills the remaining space with the game board */\n    flex-grow: 1;\n\n    /* sets a margin for the game board */\n    margin: 50px;\n\n    /* sets padding to 20px */\n    padding: 20px;\n    \n    /* sets board background color */\n    background-image: var(--board-background);\n    background-size: cover;\n\n    /* sets border */\n    border: 4px solid black;\n    border-radius: 20px;\n\n    /* positions rows */\n    display: flex;\n    flex-direction: column;\n}\n.player .row{\n    /* grows each row to fit available space on board div */\n    flex-grow: 1;\n\n    display: flex;\n}\n.player .space{\n    border: 2px solid black;\n    flex-grow: 1;\n    /* it is a 10 by 10 grid so we can set the height to be 10% \n    for each space */\n    height: 100%;\n}\n.player .space:hover{\n    background-color: var(--hover);\n}\n.player .board .row .ship{\n    background-color: gray;\n}\n.player .board .row .miss{\n    background-color: white;\n}\n.player .board .row .hit{\n    background-color: red;\n}\n.content-center{\n    /* sets the background color */\n    background-image: var(--board-background);\n    background-size: cover;\n\n    /* sets the border style */\n    border: 4px solid black;\n    border-radius: 20px;\n    /* sets the content-center */\n    width: 10%;\n\n    /* sets padding */\n    padding: 20px;\n    \n    /* sets margin to match the player board sections */\n    margin-top: 10%;\n    margin: 50px;\n    /* positions elements in the center*/\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    flex-direction: column;\n}\n.content-center .content-alerts{\n    /* sets background */\n    background-color: aliceblue;\n\n    /* sets border */\n    border: 2px solid black;\n    border-radius: 5px;\n\n    /* align text to the center */\n    text-align: center;\n}\n\n.content-center .new-game{\n    /* sets background */\n    background-color: aliceblue;\n\n    /* sets border */\n    border: 2px solid black;\n    border-radius: 5px;\n\n    /* sets button dimensions */\n    height: 7%;\n    width: 60%;\n}\n.content-center .new-game:hover{\n    background-color: var(--hover);\n}"],sourceRoot:""}]);const f=u},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var A=0;A<e.length;A++){var l=[].concat(e[A]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],s=0;s<e.length;s++){var c=e[s],A=r.base?c[0]+r.base:c[0],l=a[A]||0,d="".concat(A," ").concat(l);a[A]=l+1;var u=t(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var h=o(p,r);r.byIndex=s,n.splice(s,0,{identifier:d,updater:h,references:1})}i.push(d)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var s=t(a[i]);n[s].references--}for(var c=r(e,o),A=0;A<a.length;A++){var l=t(a[A]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},453:(e,n,t)=>{e.exports=t.p+"ea6c654baea0cc0e70a0.jpg"},101:(e,n,t)=>{e.exports=t.p+"c4578fc4bd46df7823e7.png"},369:(e,n,t)=>{e.exports=t.p+"302b206cdbd881874d60.jpg"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),a=t(569),i=t.n(a),s=t(565),c=t.n(s),A=t(216),l=t.n(A),d=t(589),u=t.n(d),p=t(772),h={};function b(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}h.styleTagTransform=u(),h.setAttributes=c(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=l(),n()(p.Z,h),p.Z&&p.Z.locals&&p.Z.locals;const f=function(){function e(n,t){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.length=n,this.hitCounter=0,this.coords=t}var n,t;return n=e,(t=[{key:"hit",value:function(){this.hitCounter+=1}},{key:"isSunk",value:function(){return this.length===this.hitCounter}}])&&b(n.prototype,t),Object.defineProperty(n,"prototype",{writable:!1}),e}();function g(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const y=function(){function e(){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.boardArray=[],this.shipArray=[],this.missedCoords=[]}var n,t;return n=e,(t=[{key:"initBoard",value:function(){this.boardArray=[];for(var e=0;e<10;e+=1){for(var n=[],t=0;t<10;t+=1)n.push([]);this.boardArray.push(n)}}},{key:"findShip",value:function(e){for(var n=0;n<this.shipArray.length;n+=1)for(var t=0;t<this.shipArray[n].coords.length;t+=1)if(this.shipArray[n].coords[t][0]===e[0]&&this.shipArray[n].coords[t][1]===e[1])return this.shipArray[n];return!1}},{key:"placeShip",value:function(e){var n=this,t=new f(e.length,e);this.shipArray.push(t),e.forEach((function(e){n.boardArray[e[0]][e[1]]="S"}))}},{key:"recieveAttack",value:function(e){"S"===this.boardArray[e[0]][e[1]]?(this.boardArray[e[0]][e[1]]="H",this.findShip(e).hitCounter+=1):(this.boardArray[e[0]][e[1]]="M",this.missedCoords.push(e))}},{key:"isAllSunk",value:function(){return this.shipArray.every((function(e){return e.isSunk()}))}}])&&g(n.prototype,t),Object.defineProperty(n,"prototype",{writable:!1}),e}();function C(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const B=function(){function e(n){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.isPlayer=n,this.Gameboard=new y}var n,t;return n=e,(t=[{key:"cpuGenAttack",value:function(e){for(var n,t,r=!1;!1===r;)n=Math.floor(10*Math.random()),t=Math.floor(10*Math.random()),"M"!==e.boardArray[n][t]&&"H"!==e.boardArray[n][t]&&(r=!0);return[n,t]}},{key:"cpuTurn",value:function(e){var n=this.cpuGenAttack(e);e.recieveAttack(n)}},{key:"playerTurn",value:function(e,n){e.recieveAttack(n)}}])&&C(n.prototype,t),Object.defineProperty(n,"prototype",{writable:!1}),e}();function m(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var v=function(){function e(n,t){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.player=n,this.isPlayer=t,this.boardElement=this.getBoard(),this.displayGrid()}var n,t;return n=e,t=[{key:"addSpaceListeners",value:function(e){var n=this;this.boardElement.querySelectorAll(".space").forEach((function(t){t.addEventListener("click",(function(){e.player.playerTurn(n.player.Gameboard,[9-parseInt(t.getAttribute("x")),parseInt(t.getAttribute("y"))]),n.displayGrid(),e.player.Gameboard.isAllSunk()||n.player.Gameboard.isAllSunk()?e.player.Gameboard.isAllSunk()?document.querySelector(".content-alerts").textContent="Game over CPU WINS":n.player.Gameboard.isAllSunk()&&(document.querySelector(".content-alerts").textContent="Game over PLAYER WINS"):n.addSpaceListeners(e),n.player.cpuTurn(e.player.Gameboard),e.displayGrid()}))}))}},{key:"getBoard",value:function(){return!0===this.isPlayer?document.querySelector("#player-board"):document.querySelector("#cpu-board")}},{key:"displayGrid",value:function(){this.boardElement.innerHTML="";for(var e=this.player.Gameboard.boardArray,n=0;n<10;n+=1){var t=document.createElement("div");t.setAttribute("index",9-n),t.setAttribute("class","row");for(var r=0;r<10;r+=1){var o=document.createElement("div");o.setAttribute("x",9-n),o.setAttribute("y",r),o.setAttribute("class","space"),"S"===e[n][r]&&!0===this.isPlayer&&o.classList.add("ship"),"M"===e[n][r]&&o.classList.add("miss"),"H"===e[n][r]&&o.classList.add("hit"),t.appendChild(o)}this.boardElement.appendChild(t)}}}],t&&m(n.prototype,t),Object.defineProperty(n,"prototype",{writable:!1}),e}();const I=v;var x,k,w=function(e,n,t,r){e=new B(!0),n=new B(!1),e.Gameboard.initBoard(),n.Gameboard.initBoard(),e.Gameboard.placeShip([[1,2],[1,3]]),e.Gameboard.placeShip([[2,3],[2,4],[2,5]]),e.Gameboard.placeShip([[3,7],[3,8],[3,9]]),e.Gameboard.placeShip([[4,1],[4,2],[4,3],[4,4]]),e.Gameboard.placeShip([[5,2],[5,3],[5,4],[5,5],[5,6]]),n.Gameboard.placeShip([[1,2],[1,3]]),n.Gameboard.placeShip([[8,5],[8,6],[8,7]]),n.Gameboard.placeShip([[6,4],[6,5],[6,6]]),n.Gameboard.placeShip([[9,1],[9,2],[9,3],[9,4],[9,5]]),n.Gameboard.placeShip([[2,1],[2,2],[2,3],[2,4],[2,5]]),t=new I(e,!0),r=new I(n,!1),document.querySelector(".content-alerts").textContent="Welcome to Battleship!",r.addSpaceListeners(t)},E=new B(!0),S=new B(!1);document.querySelector(".new-game").addEventListener("click",(function(){w(E,S,x,k)})),w(E,S,x,k)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUksQ0FBQyxFQUFHLEdBQUksQ0FBQyxFQUFHLEdBQUksQ0FBQyxFQUFHLEdBQUksQ0FBQyxFQUFHLEtBSTdEckIsRUFBZ0IsSUFBSUwsRUFBUXNCLEdBQVEsR0FFcENGLEVBQWEsSUFBSXBCLEVBQVF1QixHQUFLLEdBRzlCbkgsU0FBU0MsY0FBYyxtQkFBbUJ3RyxZQUFjLHlCQUd4RE8sRUFBV04sa0JBQWtCVCxFQUMvQixFQUtNaUIsRUFBUyxJQUFJRSxHQUFPLEdBQ3BCRCxFQUFNLElBQUlDLEdBQU8sR0FPRHBILFNBQVNDLGNBQWMsYUFDL0JtRyxpQkFBaUIsU0FBUyxXQUN0Q2EsRUFBUUMsRUFBUUMsRUFBS2xCLEVBQWVlLEVBQ3RDLElBRUFDLEVBQVFDLEVBQVFDLEVBQUtsQixFQUFlZSxFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwLy4vc3JjL3N0eWxlcy9zdHlsZXMuY3NzIiwid2VicGFjazovL29kaW4tYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly9vZGluLWJhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9vZGluLWJhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9vZGluLWJhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL29kaW4tYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL29kaW4tYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL29kaW4tYmF0dGxlc2hpcC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9vZGluLWJhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9vZGluLWJhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9vZGluLWJhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9vZGluLWJhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL29kaW4tYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwLy4vc3JjL3N0eWxlcy9zdHlsZXMuY3NzP2U0NWIiLCJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwLy4vc3JjL3NjcmlwdHMvc2hpcC9zaGlwLmpzIiwid2VicGFjazovL29kaW4tYmF0dGxlc2hpcC8uL3NyYy9zY3JpcHRzL2dhbWVib2FyZC9nYW1lYm9hcmQuanMiLCJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwLy4vc3JjL3NjcmlwdHMvcGxheWVyL3BsYXllci5qcyIsIndlYnBhY2s6Ly9vZGluLWJhdHRsZXNoaXAvLi9zcmMvc2NyaXB0cy9kaXNwbGF5L2Rpc3BsYXkuanMiLCJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIuLi9hc3NldHMvZGlhbW9uZC1wbGF0ZS5qcGdcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyA9IG5ldyBVUkwoXCIuLi9hc3NldHMvd2F2ZXMuanBnXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzJfX18gPSBuZXcgVVJMKFwiLi4vYXNzZXRzL3RpdGxlLnBuZ1wiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzJfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiOnJvb3R7XFxuICAgIC0tYm9hcmQtYmFja2dyb3VuZDogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKTtcXG4gICAgLS1ob3ZlcjogcmdiKDE4MiwgMTgyLCAxODIpO1xcbn1cXG5cXG4qe1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcbmJvZHl7XFxuICAgIC8qIFNldCB0aGUgc3ZnIGJhY2tncm91bmQgdG8gZmlsbCBzY3JlZW4qL1xcbiAgICBoZWlnaHQ6IDEwMHZoO1xcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fICsgXCIpO1xcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcblxcbiAgICAvKiBzZXQgYmFja2dyb3VuZCBjb2xvciBiZWhpbmQgdGhlIHdhdmVzIHN2ZyovXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XFxuICAgIFxcbiAgICAvKiBzZXQgaGVhZGVyIGFib3ZlIGNvbnRlbnQgc2VjdGlvbiAqL1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG4uaGVhZGVye1xcbiAgICAvKiBzZXRzIGhlYWRlciB0byBmaWxsIDEwMCUgd2lkdGggYW5kIDIwJSBvZiB0aGUgdG90YWxcXG4gICAgc2NyZWVuIGhlaWdodCovXFxuICAgIGhlaWdodDogMjAlO1xcblxcbiAgICAvKiBwb3NpdGlvbiBoZWFkZXIgdGV4dCAqL1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG5cXG4gICAgLyogY2hhbmdlIGZvbnQgc2l6ZSAqL1xcbiAgICBmb250LXNpemU6IDcwcHg7XFxufVxcbi5oZWFkZXIgaW1ne1xcbiAgICAvKiBzZXRzIHRpdGxlIGltYWdlIGluc3RlYWQgb2YgdXNpbmcgc3JjIGluIGluZGV4Lmh0bWwgKi9cXG4gICAgY29udGVudDp1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yX19fICsgXCIpO1xcbn1cXG4uY29udGVudHtcXG4gICAgLyogc2V0cyB0aGUgY29udGVudCB0byBmaWxsIDEwMCUgb2YgdGhlIHJlbWFpbmluZyBzcGFjZSAqL1xcbiAgICBmbGV4LWdyb3c6IDE7XFxuXFxuICAgIC8qIHBvc2l0aW9ucyB0aGUgY29udGVudCBlbGVtZW50cyB0byBiZSBwbGF5ZXIgfHwgY29udGVudCB8fCBjcHUgKi9cXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxufVxcbi5wbGF5ZXJ7XFxuICAgIC8qIHNldHMgZWFjaCBwbGF5ZXIgdG8gZmlsbCAxMDAlIG9mIHRoZSByZW1haW5pbmcgc3BhY2UgKi9cXG4gICAgZmxleC1ncm93OiAxO1xcblxcbiAgICAvKiBzZXRzIHRoZSBwbGF5ZXIgdGl0bGUgYWJvdmUgdGhlIHBsYXllciBib2FyZCAqL1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG4ucGxheWVyIC50aXRsZXtcXG4gICAgLyogU2V0cyB0aGUgYmFja2dyb3VuZCBjb2xvciBmb3IgdGhlIHRpdGxlIGRpdiovXFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHZhcigtLWJvYXJkLWJhY2tncm91bmQpO1xcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcblxcbiAgICAvKiBzZXRzIHRoZSB0aXRsZSB0byBiZSAxMDAlIHdpZHRoIGFuZCAxMCUgcGxheWVyIGRpdiBoZWlnaHQgKi9cXG4gICAgaGVpZ2h0OiAxMCU7XFxuXFxuICAgIC8qIHNldHMgdGhlIG1hcmdpbiB0byA1MHB4ICovXFxuICAgIG1hcmdpbjogNTBweDtcXG5cXG4gICAgLyogc2V0cyBwYWRkaW5nIHRvIDIwcHggKi9cXG4gICAgcGFkZGluZzogMjBweDtcXG5cXG4gICAgLyogc2V0cyBib3JkZXIgKi9cXG4gICAgYm9yZGVyOiA0cHggc29saWQgYmxhY2s7XFxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XFxuXFxuICAgIC8qIHBvc2l0aW9ucyB0aXRsZSAqL1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG5cXG4gICAgLyogZm9udCBjb2xvciBhbmQgc2l6ZSAqL1xcbiAgICBjb2xvcjogcmdiKDAsIDAsIDApO1xcbiAgICBmb250LXNpemU6IDMwcHg7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbn1cXG4ucGxheWVyIC5ib2FyZHtcXG4gICAgLyogZmlsbHMgdGhlIHJlbWFpbmluZyBzcGFjZSB3aXRoIHRoZSBnYW1lIGJvYXJkICovXFxuICAgIGZsZXgtZ3JvdzogMTtcXG5cXG4gICAgLyogc2V0cyBhIG1hcmdpbiBmb3IgdGhlIGdhbWUgYm9hcmQgKi9cXG4gICAgbWFyZ2luOiA1MHB4O1xcblxcbiAgICAvKiBzZXRzIHBhZGRpbmcgdG8gMjBweCAqL1xcbiAgICBwYWRkaW5nOiAyMHB4O1xcbiAgICBcXG4gICAgLyogc2V0cyBib2FyZCBiYWNrZ3JvdW5kIGNvbG9yICovXFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHZhcigtLWJvYXJkLWJhY2tncm91bmQpO1xcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcblxcbiAgICAvKiBzZXRzIGJvcmRlciAqL1xcbiAgICBib3JkZXI6IDRweCBzb2xpZCBibGFjaztcXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcXG5cXG4gICAgLyogcG9zaXRpb25zIHJvd3MgKi9cXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuLnBsYXllciAucm93e1xcbiAgICAvKiBncm93cyBlYWNoIHJvdyB0byBmaXQgYXZhaWxhYmxlIHNwYWNlIG9uIGJvYXJkIGRpdiAqL1xcbiAgICBmbGV4LWdyb3c6IDE7XFxuXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxufVxcbi5wbGF5ZXIgLnNwYWNle1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcXG4gICAgZmxleC1ncm93OiAxO1xcbiAgICAvKiBpdCBpcyBhIDEwIGJ5IDEwIGdyaWQgc28gd2UgY2FuIHNldCB0aGUgaGVpZ2h0IHRvIGJlIDEwJSBcXG4gICAgZm9yIGVhY2ggc3BhY2UgKi9cXG4gICAgaGVpZ2h0OiAxMDAlO1xcbn1cXG4ucGxheWVyIC5zcGFjZTpob3ZlcntcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taG92ZXIpO1xcbn1cXG4ucGxheWVyIC5ib2FyZCAucm93IC5zaGlwe1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xcbn1cXG4ucGxheWVyIC5ib2FyZCAucm93IC5taXNze1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG59XFxuLnBsYXllciAuYm9hcmQgLnJvdyAuaGl0e1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxufVxcbi5jb250ZW50LWNlbnRlcntcXG4gICAgLyogc2V0cyB0aGUgYmFja2dyb3VuZCBjb2xvciAqL1xcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB2YXIoLS1ib2FyZC1iYWNrZ3JvdW5kKTtcXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG5cXG4gICAgLyogc2V0cyB0aGUgYm9yZGVyIHN0eWxlICovXFxuICAgIGJvcmRlcjogNHB4IHNvbGlkIGJsYWNrO1xcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xcbiAgICAvKiBzZXRzIHRoZSBjb250ZW50LWNlbnRlciAqL1xcbiAgICB3aWR0aDogMTAlO1xcblxcbiAgICAvKiBzZXRzIHBhZGRpbmcgKi9cXG4gICAgcGFkZGluZzogMjBweDtcXG4gICAgXFxuICAgIC8qIHNldHMgbWFyZ2luIHRvIG1hdGNoIHRoZSBwbGF5ZXIgYm9hcmQgc2VjdGlvbnMgKi9cXG4gICAgbWFyZ2luLXRvcDogMTAlO1xcbiAgICBtYXJnaW46IDUwcHg7XFxuICAgIC8qIHBvc2l0aW9ucyBlbGVtZW50cyBpbiB0aGUgY2VudGVyKi9cXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcbi5jb250ZW50LWNlbnRlciAuY29udGVudC1hbGVydHN7XFxuICAgIC8qIHNldHMgYmFja2dyb3VuZCAqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBhbGljZWJsdWU7XFxuXFxuICAgIC8qIHNldHMgYm9yZGVyICovXFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuXFxuICAgIC8qIGFsaWduIHRleHQgdG8gdGhlIGNlbnRlciAqL1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi5jb250ZW50LWNlbnRlciAubmV3LWdhbWV7XFxuICAgIC8qIHNldHMgYmFja2dyb3VuZCAqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBhbGljZWJsdWU7XFxuXFxuICAgIC8qIHNldHMgYm9yZGVyICovXFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuXFxuICAgIC8qIHNldHMgYnV0dG9uIGRpbWVuc2lvbnMgKi9cXG4gICAgaGVpZ2h0OiA3JTtcXG4gICAgd2lkdGg6IDYwJTtcXG59XFxuLmNvbnRlbnQtY2VudGVyIC5uZXctZ2FtZTpob3ZlcntcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taG92ZXIpO1xcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL3N0eWxlcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSwyREFBc0Q7SUFDdEQsMkJBQTJCO0FBQy9COztBQUVBO0lBQ0ksU0FBUztJQUNULFVBQVU7SUFDVixzQkFBc0I7QUFDMUI7QUFDQTtJQUNJLHlDQUF5QztJQUN6QyxhQUFhO0lBQ2IseURBQTRDO0lBQzVDLHNCQUFzQjs7SUFFdEIsNkNBQTZDO0lBQzdDLDRCQUE0Qjs7SUFFNUIscUNBQXFDO0lBQ3JDLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7QUFDQTtJQUNJO2tCQUNjO0lBQ2QsV0FBVzs7SUFFWCx5QkFBeUI7SUFDekIsYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7O0lBRW5CLHFCQUFxQjtJQUNyQixlQUFlO0FBQ25CO0FBQ0E7SUFDSSx3REFBd0Q7SUFDeEQsK0NBQWtDO0FBQ3RDO0FBQ0E7SUFDSSx5REFBeUQ7SUFDekQsWUFBWTs7SUFFWixrRUFBa0U7SUFDbEUsYUFBYTtJQUNiLDZCQUE2QjtBQUNqQztBQUNBO0lBQ0kseURBQXlEO0lBQ3pELFlBQVk7O0lBRVosaURBQWlEO0lBQ2pELGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7QUFDQTtJQUNJLCtDQUErQztJQUMvQyx5Q0FBeUM7SUFDekMsc0JBQXNCOztJQUV0Qiw4REFBOEQ7SUFDOUQsV0FBVzs7SUFFWCw0QkFBNEI7SUFDNUIsWUFBWTs7SUFFWix5QkFBeUI7SUFDekIsYUFBYTs7SUFFYixnQkFBZ0I7SUFDaEIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjs7SUFFbkIsb0JBQW9CO0lBQ3BCLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1COztJQUVuQix3QkFBd0I7SUFDeEIsbUJBQW1CO0lBQ25CLGVBQWU7SUFDZixpQkFBaUI7QUFDckI7QUFDQTtJQUNJLGtEQUFrRDtJQUNsRCxZQUFZOztJQUVaLHFDQUFxQztJQUNyQyxZQUFZOztJQUVaLHlCQUF5QjtJQUN6QixhQUFhOztJQUViLGdDQUFnQztJQUNoQyx5Q0FBeUM7SUFDekMsc0JBQXNCOztJQUV0QixnQkFBZ0I7SUFDaEIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjs7SUFFbkIsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7QUFDQTtJQUNJLHVEQUF1RDtJQUN2RCxZQUFZOztJQUVaLGFBQWE7QUFDakI7QUFDQTtJQUNJLHVCQUF1QjtJQUN2QixZQUFZO0lBQ1o7b0JBQ2dCO0lBQ2hCLFlBQVk7QUFDaEI7QUFDQTtJQUNJLDhCQUE4QjtBQUNsQztBQUNBO0lBQ0ksc0JBQXNCO0FBQzFCO0FBQ0E7SUFDSSx1QkFBdUI7QUFDM0I7QUFDQTtJQUNJLHFCQUFxQjtBQUN6QjtBQUNBO0lBQ0ksOEJBQThCO0lBQzlCLHlDQUF5QztJQUN6QyxzQkFBc0I7O0lBRXRCLDBCQUEwQjtJQUMxQix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLDRCQUE0QjtJQUM1QixVQUFVOztJQUVWLGlCQUFpQjtJQUNqQixhQUFhOztJQUViLG1EQUFtRDtJQUNuRCxlQUFlO0lBQ2YsWUFBWTtJQUNaLG9DQUFvQztJQUNwQyxhQUFhO0lBQ2IsNkJBQTZCO0lBQzdCLG1CQUFtQjtJQUNuQixzQkFBc0I7QUFDMUI7QUFDQTtJQUNJLG9CQUFvQjtJQUNwQiwyQkFBMkI7O0lBRTNCLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsa0JBQWtCOztJQUVsQiw2QkFBNkI7SUFDN0Isa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksb0JBQW9CO0lBQ3BCLDJCQUEyQjs7SUFFM0IsZ0JBQWdCO0lBQ2hCLHVCQUF1QjtJQUN2QixrQkFBa0I7O0lBRWxCLDJCQUEyQjtJQUMzQixVQUFVO0lBQ1YsVUFBVTtBQUNkO0FBQ0E7SUFDSSw4QkFBOEI7QUFDbENcIixcInNvdXJjZXNDb250ZW50XCI6W1wiOnJvb3R7XFxuICAgIC0tYm9hcmQtYmFja2dyb3VuZDogdXJsKCcuLi9hc3NldHMvZGlhbW9uZC1wbGF0ZS5qcGcnKTtcXG4gICAgLS1ob3ZlcjogcmdiKDE4MiwgMTgyLCAxODIpO1xcbn1cXG5cXG4qe1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcbmJvZHl7XFxuICAgIC8qIFNldCB0aGUgc3ZnIGJhY2tncm91bmQgdG8gZmlsbCBzY3JlZW4qL1xcbiAgICBoZWlnaHQ6IDEwMHZoO1xcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2Fzc2V0cy93YXZlcy5qcGcnKTtcXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG5cXG4gICAgLyogc2V0IGJhY2tncm91bmQgY29sb3IgYmVoaW5kIHRoZSB3YXZlcyBzdmcqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xcbiAgICBcXG4gICAgLyogc2V0IGhlYWRlciBhYm92ZSBjb250ZW50IHNlY3Rpb24gKi9cXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuLmhlYWRlcntcXG4gICAgLyogc2V0cyBoZWFkZXIgdG8gZmlsbCAxMDAlIHdpZHRoIGFuZCAyMCUgb2YgdGhlIHRvdGFsXFxuICAgIHNjcmVlbiBoZWlnaHQqL1xcbiAgICBoZWlnaHQ6IDIwJTtcXG5cXG4gICAgLyogcG9zaXRpb24gaGVhZGVyIHRleHQgKi9cXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFxuICAgIC8qIGNoYW5nZSBmb250IHNpemUgKi9cXG4gICAgZm9udC1zaXplOiA3MHB4O1xcbn1cXG4uaGVhZGVyIGltZ3tcXG4gICAgLyogc2V0cyB0aXRsZSBpbWFnZSBpbnN0ZWFkIG9mIHVzaW5nIHNyYyBpbiBpbmRleC5odG1sICovXFxuICAgIGNvbnRlbnQ6dXJsKFxcXCIuLi9hc3NldHMvdGl0bGUucG5nXFxcIik7XFxufVxcbi5jb250ZW50e1xcbiAgICAvKiBzZXRzIHRoZSBjb250ZW50IHRvIGZpbGwgMTAwJSBvZiB0aGUgcmVtYWluaW5nIHNwYWNlICovXFxuICAgIGZsZXgtZ3JvdzogMTtcXG5cXG4gICAgLyogcG9zaXRpb25zIHRoZSBjb250ZW50IGVsZW1lbnRzIHRvIGJlIHBsYXllciB8fCBjb250ZW50IHx8IGNwdSAqL1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXG59XFxuLnBsYXllcntcXG4gICAgLyogc2V0cyBlYWNoIHBsYXllciB0byBmaWxsIDEwMCUgb2YgdGhlIHJlbWFpbmluZyBzcGFjZSAqL1xcbiAgICBmbGV4LWdyb3c6IDE7XFxuXFxuICAgIC8qIHNldHMgdGhlIHBsYXllciB0aXRsZSBhYm92ZSB0aGUgcGxheWVyIGJvYXJkICovXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcbi5wbGF5ZXIgLnRpdGxle1xcbiAgICAvKiBTZXRzIHRoZSBiYWNrZ3JvdW5kIGNvbG9yIGZvciB0aGUgdGl0bGUgZGl2Ki9cXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdmFyKC0tYm9hcmQtYmFja2dyb3VuZCk7XFxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XFxuXFxuICAgIC8qIHNldHMgdGhlIHRpdGxlIHRvIGJlIDEwMCUgd2lkdGggYW5kIDEwJSBwbGF5ZXIgZGl2IGhlaWdodCAqL1xcbiAgICBoZWlnaHQ6IDEwJTtcXG5cXG4gICAgLyogc2V0cyB0aGUgbWFyZ2luIHRvIDUwcHggKi9cXG4gICAgbWFyZ2luOiA1MHB4O1xcblxcbiAgICAvKiBzZXRzIHBhZGRpbmcgdG8gMjBweCAqL1xcbiAgICBwYWRkaW5nOiAyMHB4O1xcblxcbiAgICAvKiBzZXRzIGJvcmRlciAqL1xcbiAgICBib3JkZXI6IDRweCBzb2xpZCBibGFjaztcXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcXG5cXG4gICAgLyogcG9zaXRpb25zIHRpdGxlICovXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcblxcbiAgICAvKiBmb250IGNvbG9yIGFuZCBzaXplICovXFxuICAgIGNvbG9yOiByZ2IoMCwgMCwgMCk7XFxuICAgIGZvbnQtc2l6ZTogMzBweDtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxufVxcbi5wbGF5ZXIgLmJvYXJke1xcbiAgICAvKiBmaWxscyB0aGUgcmVtYWluaW5nIHNwYWNlIHdpdGggdGhlIGdhbWUgYm9hcmQgKi9cXG4gICAgZmxleC1ncm93OiAxO1xcblxcbiAgICAvKiBzZXRzIGEgbWFyZ2luIGZvciB0aGUgZ2FtZSBib2FyZCAqL1xcbiAgICBtYXJnaW46IDUwcHg7XFxuXFxuICAgIC8qIHNldHMgcGFkZGluZyB0byAyMHB4ICovXFxuICAgIHBhZGRpbmc6IDIwcHg7XFxuICAgIFxcbiAgICAvKiBzZXRzIGJvYXJkIGJhY2tncm91bmQgY29sb3IgKi9cXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdmFyKC0tYm9hcmQtYmFja2dyb3VuZCk7XFxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XFxuXFxuICAgIC8qIHNldHMgYm9yZGVyICovXFxuICAgIGJvcmRlcjogNHB4IHNvbGlkIGJsYWNrO1xcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xcblxcbiAgICAvKiBwb3NpdGlvbnMgcm93cyAqL1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG4ucGxheWVyIC5yb3d7XFxuICAgIC8qIGdyb3dzIGVhY2ggcm93IHRvIGZpdCBhdmFpbGFibGUgc3BhY2Ugb24gYm9hcmQgZGl2ICovXFxuICAgIGZsZXgtZ3JvdzogMTtcXG5cXG4gICAgZGlzcGxheTogZmxleDtcXG59XFxuLnBsYXllciAuc3BhY2V7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xcbiAgICBmbGV4LWdyb3c6IDE7XFxuICAgIC8qIGl0IGlzIGEgMTAgYnkgMTAgZ3JpZCBzbyB3ZSBjYW4gc2V0IHRoZSBoZWlnaHQgdG8gYmUgMTAlIFxcbiAgICBmb3IgZWFjaCBzcGFjZSAqL1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxufVxcbi5wbGF5ZXIgLnNwYWNlOmhvdmVye1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ob3Zlcik7XFxufVxcbi5wbGF5ZXIgLmJvYXJkIC5yb3cgLnNoaXB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XFxufVxcbi5wbGF5ZXIgLmJvYXJkIC5yb3cgLm1pc3N7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbn1cXG4ucGxheWVyIC5ib2FyZCAucm93IC5oaXR7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXG59XFxuLmNvbnRlbnQtY2VudGVye1xcbiAgICAvKiBzZXRzIHRoZSBiYWNrZ3JvdW5kIGNvbG9yICovXFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHZhcigtLWJvYXJkLWJhY2tncm91bmQpO1xcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcblxcbiAgICAvKiBzZXRzIHRoZSBib3JkZXIgc3R5bGUgKi9cXG4gICAgYm9yZGVyOiA0cHggc29saWQgYmxhY2s7XFxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XFxuICAgIC8qIHNldHMgdGhlIGNvbnRlbnQtY2VudGVyICovXFxuICAgIHdpZHRoOiAxMCU7XFxuXFxuICAgIC8qIHNldHMgcGFkZGluZyAqL1xcbiAgICBwYWRkaW5nOiAyMHB4O1xcbiAgICBcXG4gICAgLyogc2V0cyBtYXJnaW4gdG8gbWF0Y2ggdGhlIHBsYXllciBib2FyZCBzZWN0aW9ucyAqL1xcbiAgICBtYXJnaW4tdG9wOiAxMCU7XFxuICAgIG1hcmdpbjogNTBweDtcXG4gICAgLyogcG9zaXRpb25zIGVsZW1lbnRzIGluIHRoZSBjZW50ZXIqL1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuLmNvbnRlbnQtY2VudGVyIC5jb250ZW50LWFsZXJ0c3tcXG4gICAgLyogc2V0cyBiYWNrZ3JvdW5kICovXFxuICAgIGJhY2tncm91bmQtY29sb3I6IGFsaWNlYmx1ZTtcXG5cXG4gICAgLyogc2V0cyBib3JkZXIgKi9cXG4gICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG5cXG4gICAgLyogYWxpZ24gdGV4dCB0byB0aGUgY2VudGVyICovXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuLmNvbnRlbnQtY2VudGVyIC5uZXctZ2FtZXtcXG4gICAgLyogc2V0cyBiYWNrZ3JvdW5kICovXFxuICAgIGJhY2tncm91bmQtY29sb3I6IGFsaWNlYmx1ZTtcXG5cXG4gICAgLyogc2V0cyBib3JkZXIgKi9cXG4gICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG5cXG4gICAgLyogc2V0cyBidXR0b24gZGltZW5zaW9ucyAqL1xcbiAgICBoZWlnaHQ6IDclO1xcbiAgICB3aWR0aDogNjAlO1xcbn1cXG4uY29udGVudC1jZW50ZXIgLm5ldy1nYW1lOmhvdmVye1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ob3Zlcik7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7IC8vIElmIHVybCBpcyBhbHJlYWR5IHdyYXBwZWQgaW4gcXVvdGVzLCByZW1vdmUgdGhlbVxuXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cblxuICBpZiAob3B0aW9ucy5oYXNoKSB7XG4gICAgdXJsICs9IG9wdGlvbnMuaGFzaDtcbiAgfSAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG5cblxuICBpZiAoL1tcIicoKSBcXHRcXG5dfCglMjApLy50ZXN0KHVybCkgfHwgb3B0aW9ucy5uZWVkUXVvdGVzKSB7XG4gICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdCh1cmwucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCBcIlxcXFxuXCIpLCBcIlxcXCJcIik7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmIgPSBkb2N1bWVudC5iYXNlVVJJIHx8IHNlbGYubG9jYXRpb24uaHJlZjtcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuXHQxNzk6IDBcbn07XG5cbi8vIG5vIGNodW5rIG9uIGRlbWFuZCBsb2FkaW5nXG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gbm8ganNvbnAgZnVuY3Rpb24iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXMuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXMuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiY2xhc3MgU2hpcCB7XG4gIGNvbnN0cnVjdG9yKGxlbmd0aCwgY29vcmRzKSB7XG4gICAgdGhpcy5sZW5ndGggPSBsZW5ndGg7XG4gICAgdGhpcy5oaXRDb3VudGVyID0gMDtcbiAgICB0aGlzLmNvb3JkcyA9IGNvb3JkcztcbiAgfVxuXG4gIGhpdCgpIHtcbiAgICB0aGlzLmhpdENvdW50ZXIgKz0gMTtcbiAgfVxuXG4gIGlzU3VuaygpIHtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IHRoaXMuaGl0Q291bnRlcikge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBTaGlwO1xuIiwiaW1wb3J0IFNoaXAgZnJvbSAnLi4vc2hpcC9zaGlwJztcblxuY2xhc3MgR2FtZWJvYXJkIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5ib2FyZEFycmF5ID0gW107XG4gICAgdGhpcy5zaGlwQXJyYXkgPSBbXTtcbiAgICB0aGlzLm1pc3NlZENvb3JkcyA9IFtdO1xuICB9XG5cbiAgaW5pdEJvYXJkKCkge1xuICAgIC8vIGNsZWFyIHRoZSBib2FyZEFycmF5XG4gICAgdGhpcy5ib2FyZEFycmF5ID0gW107XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwOyBpICs9IDEpIHtcbiAgICAgIC8vIGNyZWF0ZSBhIHJvd1xuICAgICAgY29uc3Qgcm93ID0gW107XG4gICAgICAvLyBjcmVhdGUgYSAxMCB3aWR0aCBjb2x1bW4gZm9yIHRoZSByb3dcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgMTA7IGogKz0gMSkge1xuICAgICAgICByb3cucHVzaChbXSk7XG4gICAgICB9XG4gICAgICAvLyBwdXNoIHJvdyB0byB0aGUgYm9hcmRBcnJheVxuICAgICAgdGhpcy5ib2FyZEFycmF5LnB1c2gocm93KTtcbiAgICB9XG4gIH1cblxuICBmaW5kU2hpcChjb29yZHMpIHtcbiAgICAvKiBUaGlzIGFsZ29yaXRobSBpcyBub3QgdGhlIG1vc3QgZWZmaWNpZW50IHdheSB0byBzb2x2ZSB0aGlzIHByb2JsZW0uXG4gICAgQW4gYWx0ZXJuYXRpdmUgc29sdXRpb24gd291bGQgYmUgdG8gc3RvcmUgdGhlIHNoaXAgb2JqZWN0IG9uIHRoZSBib2FyZCBzcGFjZVxuICAgIGRpcmVjdGx5IGFzIGEgcHJvcGVydHkgb2YgYSBcIlNwYWNlIG9iamVjdFwiLiBXZSB3b3VsZCBiZSBhYmxlIHRvIHJldHJpZXZlXG4gICAgYSByZWZlcmVuY2UgdG8gdGhlIHNoaXAgb2JqZWN0IGF0IHRoYXQgY29vcmRpbmF0ZSB3aXRob3V0IHNvcnRpbmcgdGhyb3VnaCBldmVyeVxuICAgIGFycmF5IGl0ZW0sIGFub3RoZXIgYWx0ZXJuYXRpdmUgaXMgb2YgY291cnNlIHJlY3Vyc2lvbiAqL1xuXG4gICAgLy8gY3JlYXRlIGEgc2hpcCBmb3VuZCBib29sIHdoaWNoIHdpbGwgYmUgcmV0dXJuZWQgaWYgYSBzaGlwIGlzIG5vdCBmb3VuZFxuICAgIGNvbnN0IHNoaXBGb3VuZCA9IGZhbHNlO1xuICAgIC8vIGxvb3AgYWNyb3NzIGVhY2ggaXRlbSBpbiB0aGUgc2hpcCBhcnJheVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zaGlwQXJyYXkubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIC8vIGxvb3AgYWNyb3NzIGV2ZXJ5IGl0ZW0gaW4gdGhlIGN1cnJlbnQgc2hpcCdzIGNvb3JkIGFycmF5XG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMuc2hpcEFycmF5W2ldLmNvb3Jkcy5sZW5ndGg7IGogKz0gMSkge1xuICAgICAgICAvLyBiYXNlIGNhc2UgYSBzaGlwIGlzIGZvdW5kIHdpdGggdGhlIGNvb3JkcyBzcGVjaWZpZWRcbiAgICAgICAgaWYgKHRoaXMuc2hpcEFycmF5W2ldLmNvb3Jkc1tqXVswXSA9PT0gY29vcmRzWzBdXG4gICAgICAgICAgJiYgdGhpcy5zaGlwQXJyYXlbaV0uY29vcmRzW2pdWzFdID09PSBjb29yZHNbMV0pIHtcbiAgICAgICAgICAvLyByZXR1cm4gdGhlIHNoaXBcbiAgICAgICAgICByZXR1cm4gdGhpcy5zaGlwQXJyYXlbaV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyByZXR1cm5zIGlmIGEgc2hpcCB3aXRoIHRoZSBzcGVjaWZpZWQgY29vcmRpbmF0ZXMgaXMgbm90IGZvdW5kXG4gICAgcmV0dXJuIHNoaXBGb3VuZDtcbiAgfVxuXG4gIHBsYWNlU2hpcChjb29yZHMpIHtcbiAgICAvLyBjcmVhdGUgYSBuZXcgc2hpcFxuICAgIGNvbnN0IHRlbXBTaGlwID0gbmV3IFNoaXAoY29vcmRzLmxlbmd0aCwgY29vcmRzKTtcbiAgICAvLyBhZGQgdGhlIHNoaXAgdG8gdGhlIHNoaXBBcnJheVxuICAgIHRoaXMuc2hpcEFycmF5LnB1c2godGVtcFNoaXApO1xuICAgIC8vIGFkZCBzaGlwIG1hcmtlcnMgdG8gdGhlIGJvYXJkIGFycmF5XG4gICAgY29vcmRzLmZvckVhY2goKGNvb3JkKSA9PiB7XG4gICAgICB0aGlzLmJvYXJkQXJyYXlbY29vcmRbMF1dW2Nvb3JkWzFdXSA9ICdTJztcbiAgICB9KTtcbiAgfVxuXG4gIHJlY2lldmVBdHRhY2soYXR0YWNrKSB7XG4gICAgLy8gQ2hlY2sgdG8gc2VlIGlmIHRoZXJlIGlzIGEgc2hpcCBhdCB0aGF0IGxvY2F0aW9uXG4gICAgaWYgKHRoaXMuYm9hcmRBcnJheVthdHRhY2tbMF1dW2F0dGFja1sxXV0gPT09ICdTJykge1xuICAgICAgLy8gUmVjb3JkIHRoZSBoaXQgb24gdGhlIGJvYXJkIGFycmF5XG4gICAgICB0aGlzLmJvYXJkQXJyYXlbYXR0YWNrWzBdXVthdHRhY2tbMV1dID0gJ0gnO1xuICAgICAgLy8gQ2FsbCB0aGUgZmluZFNoaXAgZnVuY3Rpb24gdG8gZmluZCB0aGUgc2hpcCB0aGF0IHdhcyBhdHRhY2tlZFxuICAgICAgY29uc3Qgc2hpcCA9IHRoaXMuZmluZFNoaXAoYXR0YWNrKTtcbiAgICAgIC8vIEluY3JlbWVudCB0aGUgc2hpcCB0aGF0IHdhcyBhdHRhY2tlZCBoaXRDb3VudGVyIGJ5IG9uZVxuICAgICAgc2hpcC5oaXRDb3VudGVyICs9IDE7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFJlY29yZCB0aGUgbWlzc2VkIGhpdCBvbiB0aGUgYm9hcmQgYXJyYXlcbiAgICAgIHRoaXMuYm9hcmRBcnJheVthdHRhY2tbMF1dW2F0dGFja1sxXV0gPSAnTSc7XG4gICAgICAvLyBSZWNvcmQgdGhlIG1pc3NlZCBoaXQgaW4gbWlzc2VkQ29yZHNcbiAgICAgIHRoaXMubWlzc2VkQ29vcmRzLnB1c2goYXR0YWNrKTtcbiAgICB9XG4gIH1cblxuICBpc0FsbFN1bmsoKSB7XG4gICAgcmV0dXJuIHRoaXMuc2hpcEFycmF5LmV2ZXJ5KChzaGlwKSA9PiBzaGlwLmlzU3VuaygpKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBHYW1lYm9hcmQ7XG4iLCJpbXBvcnQgR2FtZWJvYXJkIGZyb20gJy4uL2dhbWVib2FyZC9nYW1lYm9hcmQnO1xuXG5jbGFzcyBQbGF5ZXIge1xuICBjb25zdHJ1Y3Rvcihpc1BsYXllcikge1xuICAgIHRoaXMuaXNQbGF5ZXIgPSBpc1BsYXllcjtcbiAgICB0aGlzLkdhbWVib2FyZCA9IG5ldyBHYW1lYm9hcmQoKTtcbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjbGFzcy1tZXRob2RzLXVzZS10aGlzXG4gIGNwdUdlbkF0dGFjayhQbGF5ZXJCb2FyZCkge1xuICAgIGxldCB2YWxpZE1vdmUgPSBmYWxzZTtcbiAgICBsZXQgeDtcbiAgICBsZXQgeTtcbiAgICB3aGlsZSAodmFsaWRNb3ZlID09PSBmYWxzZSkge1xuICAgICAgLy8gZ2VuZXJhdGUgYSByYW5kb20gbnVtYmVyIGJldHdlZW4gMC05IGZvciBhbiB4IGNvb3JkXG4gICAgICB4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApO1xuICAgICAgLy8gZ2VuZXJhdGUgYSByYW5kb20gbnVtYmVyIGJldHdlZW4gMC05IGZvciBhbiB5IGNvb3JkXG4gICAgICB5ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApO1xuICAgICAgLy8gY2hlY2sgdGhlIGJvYXJkQXJyYXkgZm9yICdNJyBvciAnSCcgd2hpY2ggdGVsbHMgdXMgaWYgdGhlIHNwYWNlIGhhcyBiZWVuIGF0dGFja2VkIGFscmVhZHlcbiAgICAgIGlmIChQbGF5ZXJCb2FyZC5ib2FyZEFycmF5W3hdW3ldICE9PSAnTScgJiYgUGxheWVyQm9hcmQuYm9hcmRBcnJheVt4XVt5XSAhPT0gJ0gnKSB7XG4gICAgICAgIC8vIGlmIHRoZSBzcGFjZSBoYXNuJ3QgYmVlbiBhdHRhY2tlZCBjaGFuZ2UgdmFsaWRNb3ZlIHRvIHRydWVcbiAgICAgICAgdmFsaWRNb3ZlID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIFt4LCB5XTtcbiAgfVxuXG4gIGNwdVR1cm4oUGxheWVyQm9hcmQpIHtcbiAgICAvLyBnZW5lcmF0ZSBhbiBhdHRhY2tcbiAgICBjb25zdCBhdHRhY2sgPSB0aGlzLmNwdUdlbkF0dGFjayhQbGF5ZXJCb2FyZCk7XG4gICAgLy8gYXR0YWNrIGVuZW15IGdhbWVib2FyZFxuICAgIFBsYXllckJvYXJkLnJlY2lldmVBdHRhY2soYXR0YWNrKTtcbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjbGFzcy1tZXRob2RzLXVzZS10aGlzXG4gIHBsYXllclR1cm4oQ3B1Qm9hcmQsIGF0dGFjaykge1xuICAgIC8vIGF0dGFjayB0aGUgZW5lbXkgZ2FtZWJvYXJkXG4gICAgQ3B1Qm9hcmQucmVjaWV2ZUF0dGFjayhhdHRhY2spO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBsYXllcjtcbiIsImNsYXNzIERpc3BsYXkge1xuICBjb25zdHJ1Y3RvcihwbGF5ZXIsIGlzUGxheWVyKSB7XG4gICAgdGhpcy5wbGF5ZXIgPSBwbGF5ZXI7XG4gICAgdGhpcy5pc1BsYXllciA9IGlzUGxheWVyO1xuICAgIHRoaXMuYm9hcmRFbGVtZW50ID0gdGhpcy5nZXRCb2FyZCgpO1xuICAgIC8vIGluaXRhbGl6ZXMgdGhlIGdyaWQgb24gYm90aCBzaWRlc1xuICAgIHRoaXMuZGlzcGxheUdyaWQoKTtcbiAgfVxuXG4gIGFkZFNwYWNlTGlzdGVuZXJzKFBMQVlFUkRJU1BMQVkpIHtcbiAgICBjb25zdCBhbGxTcGFjZXMgPSB0aGlzLmJvYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc3BhY2UnKTtcbiAgICBhbGxTcGFjZXMuZm9yRWFjaCgoc3BhY2UpID0+IHtcbiAgICAgIHNwYWNlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAvLyBwbGF5IHBsYXllciB0dXJuXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByYWRpeFxuICAgICAgICBQTEFZRVJESVNQTEFZLnBsYXllci5wbGF5ZXJUdXJuKHRoaXMucGxheWVyLkdhbWVib2FyZCwgWzkgLSBwYXJzZUludChzcGFjZS5nZXRBdHRyaWJ1dGUoJ3gnKSksIHBhcnNlSW50KHNwYWNlLmdldEF0dHJpYnV0ZSgneScpKV0pO1xuICAgICAgICAvLyB1cGRhdGUgY3B1IGdyaWRcbiAgICAgICAgdGhpcy5kaXNwbGF5R3JpZCgpO1xuICAgICAgICAvLyBjaGVjayB0byBzZWUgaWYgYWxsIHNoaXBzIGhhdmUgYmVlbiBzdW5rIG9uIGVpdGhlciBzaWRlXG4gICAgICAgIGlmIChQTEFZRVJESVNQTEFZLnBsYXllci5HYW1lYm9hcmQuaXNBbGxTdW5rKCkgfHwgdGhpcy5wbGF5ZXIuR2FtZWJvYXJkLmlzQWxsU3VuaygpKSB7XG4gICAgICAgICAgaWYgKFBMQVlFUkRJU1BMQVkucGxheWVyLkdhbWVib2FyZC5pc0FsbFN1bmsoKSkge1xuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRlbnQtYWxlcnRzJykudGV4dENvbnRlbnQgPSAnR2FtZSBvdmVyIENQVSBXSU5TJztcbiAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMucGxheWVyLkdhbWVib2FyZC5pc0FsbFN1bmsoKSkge1xuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRlbnQtYWxlcnRzJykudGV4dENvbnRlbnQgPSAnR2FtZSBvdmVyIFBMQVlFUiBXSU5TJztcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gYWRkIGV2ZW50IGxpc3RlbmVycyBhZ2FpbiB0aGF0IHdlcmUgcmVtb3ZlZCAocmVjdXJzaXZlKVxuICAgICAgICAgIHRoaXMuYWRkU3BhY2VMaXN0ZW5lcnMoUExBWUVSRElTUExBWSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gcGxheSBjcHUgdHVyblxuICAgICAgICB0aGlzLnBsYXllci5jcHVUdXJuKFBMQVlFUkRJU1BMQVkucGxheWVyLkdhbWVib2FyZCk7XG4gICAgICAgIC8vIHVwZGF0ZSBwbGF5ZXIgZ3JpZFxuICAgICAgICBQTEFZRVJESVNQTEFZLmRpc3BsYXlHcmlkKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGdldEJvYXJkKCkge1xuICAgIGlmICh0aGlzLmlzUGxheWVyID09PSB0cnVlKSB7XG4gICAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3BsYXllci1ib2FyZCcpO1xuICAgIH1cbiAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NwdS1ib2FyZCcpO1xuICB9XG5cbiAgZGlzcGxheUdyaWQoKSB7XG4gICAgLy8gY2xlYXIgZ3JpZFxuICAgIHRoaXMuYm9hcmRFbGVtZW50LmlubmVySFRNTCA9ICcnO1xuICAgIC8vIHN0b3JlIHRoZSBib2FyZCBhcnJheSBpbiBhIHZhcmlhYmxlXG4gICAgY29uc3QgYm9hcmQgPSB0aGlzLnBsYXllci5HYW1lYm9hcmQuYm9hcmRBcnJheTtcbiAgICAvLyBjcmVhdGUgMTAgcm93c1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkgKz0gMSkge1xuICAgICAgLy8gY3JlYXRlIGEgcm93XG4gICAgICBjb25zdCByb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIC8qIHRoZSBpbmRleCBpcyBzZXQgdG8gOSAtIGkuIDkgYmVpbmcgdGhlIG1heCBncmlkIHNpemVcbiAgICAgIHNvIGVzc2VudGlhbGx5IGl0IHdpbGwgYXBwZWFyIHRvIGRpc3BsYXkgdGhlIHJvd3MgaW4gcmV2ZXJzZVxuICAgICAgb24gc2NyZWVuICovXG4gICAgICByb3cuc2V0QXR0cmlidXRlKCdpbmRleCcsIDkgLSBpKTtcbiAgICAgIC8vIGFkZCByb3cgdG8gcm93IGNsYXNzXG4gICAgICByb3cuc2V0QXR0cmlidXRlKCdjbGFzcycsICdyb3cnKTtcbiAgICAgIC8vIGNyZWF0ZSAxMCBzcGFjZXMgcGVyIHJvd1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCAxMDsgaiArPSAxKSB7XG4gICAgICAgIC8vIGNyZWF0ZSBhIHNwYWNlXG4gICAgICAgIGNvbnN0IHNwYWNlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIC8vIHNldCBjb29yZGluYXRlc1xuICAgICAgICAvLyBzZXRzIHggYXMgOSAtIGkgZm9yIHNhbWUgcmVhc29uIGFzIGFib3ZlIGNvbW1lbnRcbiAgICAgICAgc3BhY2Uuc2V0QXR0cmlidXRlKCd4JywgOSAtIGkpO1xuICAgICAgICBzcGFjZS5zZXRBdHRyaWJ1dGUoJ3knLCBqKTtcbiAgICAgICAgLy8gYWRkIHNwYWNlIHRvIHNwYWNlIGNsYXNzXG4gICAgICAgIHNwYWNlLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnc3BhY2UnKTtcbiAgICAgICAgLyogaWYgc3BhY2UgaXMgJ1MnIGFkZCBzcGFjZSB0byBzaGlwIGNsYXNzXG4gICAgICAgIGRvZXNuJ3QgZGlzcGxheSBlbmVteSBzaGlwcyB0byBwbGF5ZXIgKi9cbiAgICAgICAgaWYgKGJvYXJkW2ldW2pdID09PSAnUycgJiYgdGhpcy5pc1BsYXllciA9PT0gdHJ1ZSkge1xuICAgICAgICAgIHNwYWNlLmNsYXNzTGlzdC5hZGQoJ3NoaXAnKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBpZiBzcGFjZSBpcyAnTScgYWRkIHNwYWNlIHRvIG1pc3MgY2xhc3NcbiAgICAgICAgaWYgKGJvYXJkW2ldW2pdID09PSAnTScpIHtcbiAgICAgICAgICBzcGFjZS5jbGFzc0xpc3QuYWRkKCdtaXNzJyk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gaWYgc3BhY2UgaXMgJ0gnIGFkZCBzcGFjZSB0byBoaXQgY2xhc3NcbiAgICAgICAgaWYgKGJvYXJkW2ldW2pdID09PSAnSCcpIHtcbiAgICAgICAgICBzcGFjZS5jbGFzc0xpc3QuYWRkKCdoaXQnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGFkZCBzcGFjZSB0byByb3dcbiAgICAgICAgcm93LmFwcGVuZENoaWxkKHNwYWNlKTtcbiAgICAgIH1cbiAgICAgIC8vIGFwcGVuZCByb3cgdG8gcGxheWVyIGJvYXJkO1xuICAgICAgdGhpcy5ib2FyZEVsZW1lbnQuYXBwZW5kQ2hpbGQocm93KTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRGlzcGxheTtcbiIsImltcG9ydCAnLi9zdHlsZXMvc3R5bGVzLmNzcyc7XG5pbXBvcnQgUGxheWVyIGZyb20gJy4vc2NyaXB0cy9wbGF5ZXIvcGxheWVyJztcbmltcG9ydCBEaXNwbGF5IGZyb20gJy4vc2NyaXB0cy9kaXNwbGF5L2Rpc3BsYXknO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuY29uc3QgbmV3R2FtZSA9IGZ1bmN0aW9uIChQTEFZRVIsIENQVSwgUExBWUVSRElTUExBWSwgQ1BVRElTUExBWSkge1xuICAvLyBDcmVhdGUgdHdvIHBsYXllcnNcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gIFBMQVlFUiA9IG5ldyBQbGF5ZXIodHJ1ZSk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICBDUFUgPSBuZXcgUGxheWVyKGZhbHNlKTtcblxuICAvLyBJbml0YWxpemUgdGhlaXIgYm9hcmQgYXJyYXlzXG4gIFBMQVlFUi5HYW1lYm9hcmQuaW5pdEJvYXJkKCk7XG4gIENQVS5HYW1lYm9hcmQuaW5pdEJvYXJkKCk7XG5cbiAgLy8gUGxhY2UgZml2ZSBzaGlwcyBvbiB0aGUgUGxheWVyIGJvYXJkXG4gIC8vIDEpIDJ4IGxlbmd0aCBzaGlwXG4gIFBMQVlFUi5HYW1lYm9hcmQucGxhY2VTaGlwKFtbMSwgMl0sIFsxLCAzXV0pO1xuICAvLyAyKSAzeCBsZW5ndGggc2hpcFxuICBQTEFZRVIuR2FtZWJvYXJkLnBsYWNlU2hpcChbWzIsIDNdLCBbMiwgNF0sIFsyLCA1XV0pO1xuICAvLyAzKSAzeCBsZW5ndGggc2hpcFxuICBQTEFZRVIuR2FtZWJvYXJkLnBsYWNlU2hpcChbWzMsIDddLCBbMywgOF0sIFszLCA5XV0pO1xuICAvLyA0KSA0eCBsZW5ndGggc2hpcFxuICBQTEFZRVIuR2FtZWJvYXJkLnBsYWNlU2hpcChbWzQsIDFdLCBbNCwgMl0sIFs0LCAzXSwgWzQsIDRdXSk7XG4gIC8vIDUpIDV4IGxlbmd0aCBzaGlwXG4gIFBMQVlFUi5HYW1lYm9hcmQucGxhY2VTaGlwKFtbNSwgMl0sIFs1LCAzXSwgWzUsIDRdLCBbNSwgNV0sIFs1LCA2XV0pO1xuXG4gIC8vIFBsYWNlIGZpdmUgc2hpcHMgb24gdGhlIENQVSBib2FyZFxuICAvLyAxKSAyeCBsZW5ndGggc2hpcFxuICBDUFUuR2FtZWJvYXJkLnBsYWNlU2hpcChbWzEsIDJdLCBbMSwgM11dKTtcbiAgLy8gMikgM3ggbGVuZ3RoIHNoaXBcbiAgQ1BVLkdhbWVib2FyZC5wbGFjZVNoaXAoW1s4LCA1XSwgWzgsIDZdLCBbOCwgN11dKTtcbiAgLy8gMykgM3ggbGVuZ3RoIHNoaXBcbiAgQ1BVLkdhbWVib2FyZC5wbGFjZVNoaXAoW1s2LCA0XSwgWzYsIDVdLCBbNiwgNl1dKTtcbiAgLy8gNCkgNHggbGVuZ3RoIHNoaXBcbiAgQ1BVLkdhbWVib2FyZC5wbGFjZVNoaXAoW1s5LCAxXSwgWzksIDJdLCBbOSwgM10sIFs5LCA0XSwgWzksIDVdXSk7XG4gIC8vIDUpIDV4IGxlbmd0aCBzaGlwXG4gIENQVS5HYW1lYm9hcmQucGxhY2VTaGlwKFtbMiwgMV0sIFsyLCAyXSwgWzIsIDNdLCBbMiwgNF0sIFsyLCA1XV0pO1xuXG4gIC8vIEluaXRhbGl6ZSB0aGVpciBkaXNwbGF5c1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgUExBWUVSRElTUExBWSA9IG5ldyBEaXNwbGF5KFBMQVlFUiwgdHJ1ZSk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICBDUFVESVNQTEFZID0gbmV3IERpc3BsYXkoQ1BVLCBmYWxzZSk7XG5cbiAgLy8gYWRkIGNlbnRlciBncmVldGluZ1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGVudC1hbGVydHMnKS50ZXh0Q29udGVudCA9ICdXZWxjb21lIHRvIEJhdHRsZXNoaXAhJztcblxuICAvLyBhZGQgZXZlbnQgbGlzdGVuZXJzIHdoaWNoIGFsbG93IHR1cm5zIHRvIGJlIHBsYXllZFxuICBDUFVESVNQTEFZLmFkZFNwYWNlTGlzdGVuZXJzKFBMQVlFUkRJU1BMQVkpO1xufTtcblxuLy8gSW5pdGFsaXplIGEgbmV3IGdhbWUgKHdoZW4gdGhlIHNpdGUgaXMgbG9hZGVkIHRoaXMgcnVucyBieSBkZWZhdWx0KVxuXG4vLyBDcmVhdGUgdHdvIHBsYXllcnNcbmNvbnN0IFBMQVlFUiA9IG5ldyBQbGF5ZXIodHJ1ZSk7XG5jb25zdCBDUFUgPSBuZXcgUGxheWVyKGZhbHNlKTtcblxuLy8gQ3JlYXRlIGJvdGggZGlzcGxheXNcbmxldCBQTEFZRVJESVNQTEFZO1xubGV0IENQVURJU1BMQVk7XG5cbi8vIENyZWF0ZSBuZXcgZ2FtZSBidXR0b25cbmNvbnN0IG5ld0dhbWVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmV3LWdhbWUnKTtcbm5ld0dhbWVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIG5ld0dhbWUoUExBWUVSLCBDUFUsIFBMQVlFUkRJU1BMQVksIENQVURJU1BMQVkpO1xufSk7XG5cbm5ld0dhbWUoUExBWUVSLCBDUFUsIFBMQVlFUkRJU1BMQVksIENQVURJU1BMQVkpO1xuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fIiwiVVJMIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMl9fXyIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwidXJsIiwib3B0aW9ucyIsIlN0cmluZyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidGVzdCIsInNsaWNlIiwiaGFzaCIsIm5lZWRRdW90ZXMiLCJyZXBsYWNlIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibSIsIm4iLCJnZXR0ZXIiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicCIsImIiLCJiYXNlVVJJIiwic2VsZiIsImhyZWYiLCJuYyIsImNvb3JkcyIsImhpdENvdW50ZXIiLCJib2FyZEFycmF5Iiwic2hpcEFycmF5IiwibWlzc2VkQ29vcmRzIiwicm93IiwiaiIsInRlbXBTaGlwIiwiU2hpcCIsImZvckVhY2giLCJjb29yZCIsImF0dGFjayIsImZpbmRTaGlwIiwiZXZlcnkiLCJzaGlwIiwiaXNTdW5rIiwiaXNQbGF5ZXIiLCJHYW1lYm9hcmQiLCJQbGF5ZXJCb2FyZCIsIngiLCJ5IiwidmFsaWRNb3ZlIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiY3B1R2VuQXR0YWNrIiwicmVjaWV2ZUF0dGFjayIsIkNwdUJvYXJkIiwiRGlzcGxheSIsInBsYXllciIsImJvYXJkRWxlbWVudCIsImdldEJvYXJkIiwiZGlzcGxheUdyaWQiLCJQTEFZRVJESVNQTEFZIiwicXVlcnlTZWxlY3RvckFsbCIsInNwYWNlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInBsYXllclR1cm4iLCJwYXJzZUludCIsImdldEF0dHJpYnV0ZSIsImlzQWxsU3VuayIsInRleHRDb250ZW50IiwiYWRkU3BhY2VMaXN0ZW5lcnMiLCJjcHVUdXJuIiwiaW5uZXJIVE1MIiwiYm9hcmQiLCJjbGFzc0xpc3QiLCJhZGQiLCJDUFVESVNQTEFZIiwibmV3R2FtZSIsIlBMQVlFUiIsIkNQVSIsIlBsYXllciIsImluaXRCb2FyZCIsInBsYWNlU2hpcCJdLCJzb3VyY2VSb290IjoiIn0=