(()=>{"use strict";var n={772:(n,e,t)=>{t.d(e,{Z:()=>f});var r=t(537),a=t.n(r),o=t(645),i=t.n(o),s=t(667),A=t.n(s),c=new URL(t(453),t.b),l=new URL(t(369),t.b),d=new URL(t(101),t.b),u=i()(a()),p=A()(c),h=A()(l),b=A()(d);u.push([n.id,":root{\n    --board-background: url("+p+");\n    --hover: rgb(182, 182, 182);\n}\n@keyframes slideInFromLeft {\n    0% {\n      transform: translateX(-100%);\n    }\n    100% {\n      transform: translateX(0);\n    }\n  }\n\n*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nbody{\n    /* Set the svg background to fill screen*/\n    background-image: url("+h+");\n    background-size: cover;\n\n    /* set background color behind the waves svg*/\n    background-color: whitesmoke;\n    \n    /* set header above content section */\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n}\n.header{\n    /* sets header to fill 100% width and 20% of the total\n    screen height*/\n    height: 20%;\n\n    /* position header text */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* change font size */\n    font-size: 70px;\n}\n.header img{\n    /* sets title image instead of using src in index.html */\n    content:url("+b+");\n    width: 50%;\n    max-width: 500px;\n    animation: 1s ease-in 0s 1 slideInFromLeft;\n}\n.content{\n    height: 100%;\n    /* positions the content elements to be player || content || cpu */\n    display: flex;\n    justify-content: space-around;\n    margin: 1%;\n}\n.player{\n    /* sets each player to fill 100% of the remaining space */\n    flex-grow: 1;\n\n    /* sets the player title above the player board */\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n.player .title{\n    /* Sets the background color for the title div*/\n    background-image: var(--board-background);\n    background-size: cover;\n    animation: 1s ease-in 0s 1 slideInFromLeft;\n\n    /* sets the title to be 100% width and 10% player div height */\n    height: 10%;\n    align-self: center;\n    /* sets padding to 20px */\n    max-width: 350px;\n    width: 100%;\n    padding: 5px;\n    border-radius: 5px;\n    /* positions title */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* font color and size */\n    color: rgb(0, 0, 0);\n    font-size: 20px;\n    font-weight: bold;\n    border: 2px solid black;\n}\n.player .board{\n    /* fills the remaining space with the game board */\n    flex-grow: 1;\n\n    /* sets a margin for the game board */\n\n    /* sets padding to 20px */\n    padding: 20px;\n    \n    /* sets board background color */\n    background-image: var(--board-background);\n    background-size: cover;\n\n    /* sets border */\n    border: 2px solid black;\n    border-radius: 5px;\n\n    /* positions rows */\n    display: flex;\n    flex-direction: column;\n}\n.player .row{\n    /* grows each row to fit available space on board div */\n    flex-grow: 1;\n\n    display: flex;\n}\n.player .space{\n    border: 2px solid black;\n    /* make spaces fill entire row */\n    flex-grow: 1;\n    height: 100%;\n    transition: background-color 0.2s;\n}\n.player .space:hover{\n    background-color: var(--hover);\n    cursor: pointer;\n}\n.player .board .row .ship{\n    background-color: gray;\n}\n.player .board .row .miss{\n    background-color: white;\n}\n.player .board .row .hit{\n    background-color: red;\n}\n.content-center{\n    /* sets the background color */\n    background-image: var(--board-background);\n    background-size: cover;\n\n    /* sets the border style */\n    border: 2px solid black;\n    border-radius: 5px;\n    /* sets the content-center */\n    min-width: 100px;\n    /* sets margin to match the player board sections */\n    margin: 1%;\n    /* positions elements in the center*/\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    flex-direction: column;\n}\n.content-center .content-alerts{\n    margin: 5px;\n    height: max-content;\n    max-width: 95px;\n    /* sets border */\n    border-radius: 5px;\n    /* align text to the center */\n    text-align: center;\n    font-size: 12px;\n    background-color: white;\n    border: 2px solid black;\n    padding: 5px;\n}\n\n.content-center .new-game{\n    /* sets border */\n    border-radius: 5px;\n\n    /* sets button dimensions */\n    height: max-content;\n    padding: 5px;\n    border: 2px solid black;\n    width: 60%;\n    background-color: white;\n    cursor: pointer;\n    transition: background-color 0.5s;\n}\n.content-center .new-game:hover{\n    background-color: var(--hover);\n}","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;IACI,2DAAsD;IACtD,2BAA2B;AAC/B;AACA;IACI;MACE,4BAA4B;IAC9B;IACA;MACE,wBAAwB;IAC1B;EACF;;AAEF;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;AACA;IACI,yCAAyC;IACzC,yDAA4C;IAC5C,sBAAsB;;IAEtB,6CAA6C;IAC7C,4BAA4B;;IAE5B,qCAAqC;IACrC,aAAa;IACb,sBAAsB;IACtB,aAAa;AACjB;AACA;IACI;kBACc;IACd,WAAW;;IAEX,yBAAyB;IACzB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;IAEnB,qBAAqB;IACrB,eAAe;AACnB;AACA;IACI,wDAAwD;IACxD,+CAAkC;IAClC,UAAU;IACV,gBAAgB;IAChB,0CAA0C;AAC9C;AACA;IACI,YAAY;IACZ,kEAAkE;IAClE,aAAa;IACb,6BAA6B;IAC7B,UAAU;AACd;AACA;IACI,yDAAyD;IACzD,YAAY;;IAEZ,iDAAiD;IACjD,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;AACA;IACI,+CAA+C;IAC/C,yCAAyC;IACzC,sBAAsB;IACtB,0CAA0C;;IAE1C,8DAA8D;IAC9D,WAAW;IACX,kBAAkB;IAClB,yBAAyB;IACzB,gBAAgB;IAChB,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,oBAAoB;IACpB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;IAEnB,wBAAwB;IACxB,mBAAmB;IACnB,eAAe;IACf,iBAAiB;IACjB,uBAAuB;AAC3B;AACA;IACI,kDAAkD;IAClD,YAAY;;IAEZ,qCAAqC;;IAErC,yBAAyB;IACzB,aAAa;;IAEb,gCAAgC;IAChC,yCAAyC;IACzC,sBAAsB;;IAEtB,gBAAgB;IAChB,uBAAuB;IACvB,kBAAkB;;IAElB,mBAAmB;IACnB,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI,uDAAuD;IACvD,YAAY;;IAEZ,aAAa;AACjB;AACA;IACI,uBAAuB;IACvB,gCAAgC;IAChC,YAAY;IACZ,YAAY;IACZ,iCAAiC;AACrC;AACA;IACI,8BAA8B;IAC9B,eAAe;AACnB;AACA;IACI,sBAAsB;AAC1B;AACA;IACI,uBAAuB;AAC3B;AACA;IACI,qBAAqB;AACzB;AACA;IACI,8BAA8B;IAC9B,yCAAyC;IACzC,sBAAsB;;IAEtB,0BAA0B;IAC1B,uBAAuB;IACvB,kBAAkB;IAClB,4BAA4B;IAC5B,gBAAgB;IAChB,mDAAmD;IACnD,UAAU;IACV,oCAAoC;IACpC,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,sBAAsB;AAC1B;AACA;IACI,WAAW;IACX,mBAAmB;IACnB,eAAe;IACf,gBAAgB;IAChB,kBAAkB;IAClB,6BAA6B;IAC7B,kBAAkB;IAClB,eAAe;IACf,uBAAuB;IACvB,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,kBAAkB;;IAElB,2BAA2B;IAC3B,mBAAmB;IACnB,YAAY;IACZ,uBAAuB;IACvB,UAAU;IACV,uBAAuB;IACvB,eAAe;IACf,iCAAiC;AACrC;AACA;IACI,8BAA8B;AAClC",sourcesContent:[":root{\n    --board-background: url('../assets/diamond-plate.jpg');\n    --hover: rgb(182, 182, 182);\n}\n@keyframes slideInFromLeft {\n    0% {\n      transform: translateX(-100%);\n    }\n    100% {\n      transform: translateX(0);\n    }\n  }\n\n*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nbody{\n    /* Set the svg background to fill screen*/\n    background-image: url('../assets/waves.jpg');\n    background-size: cover;\n\n    /* set background color behind the waves svg*/\n    background-color: whitesmoke;\n    \n    /* set header above content section */\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n}\n.header{\n    /* sets header to fill 100% width and 20% of the total\n    screen height*/\n    height: 20%;\n\n    /* position header text */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* change font size */\n    font-size: 70px;\n}\n.header img{\n    /* sets title image instead of using src in index.html */\n    content:url(\"../assets/title.png\");\n    width: 50%;\n    max-width: 500px;\n    animation: 1s ease-in 0s 1 slideInFromLeft;\n}\n.content{\n    height: 100%;\n    /* positions the content elements to be player || content || cpu */\n    display: flex;\n    justify-content: space-around;\n    margin: 1%;\n}\n.player{\n    /* sets each player to fill 100% of the remaining space */\n    flex-grow: 1;\n\n    /* sets the player title above the player board */\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n.player .title{\n    /* Sets the background color for the title div*/\n    background-image: var(--board-background);\n    background-size: cover;\n    animation: 1s ease-in 0s 1 slideInFromLeft;\n\n    /* sets the title to be 100% width and 10% player div height */\n    height: 10%;\n    align-self: center;\n    /* sets padding to 20px */\n    max-width: 350px;\n    width: 100%;\n    padding: 5px;\n    border-radius: 5px;\n    /* positions title */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* font color and size */\n    color: rgb(0, 0, 0);\n    font-size: 20px;\n    font-weight: bold;\n    border: 2px solid black;\n}\n.player .board{\n    /* fills the remaining space with the game board */\n    flex-grow: 1;\n\n    /* sets a margin for the game board */\n\n    /* sets padding to 20px */\n    padding: 20px;\n    \n    /* sets board background color */\n    background-image: var(--board-background);\n    background-size: cover;\n\n    /* sets border */\n    border: 2px solid black;\n    border-radius: 5px;\n\n    /* positions rows */\n    display: flex;\n    flex-direction: column;\n}\n.player .row{\n    /* grows each row to fit available space on board div */\n    flex-grow: 1;\n\n    display: flex;\n}\n.player .space{\n    border: 2px solid black;\n    /* make spaces fill entire row */\n    flex-grow: 1;\n    height: 100%;\n    transition: background-color 0.2s;\n}\n.player .space:hover{\n    background-color: var(--hover);\n    cursor: pointer;\n}\n.player .board .row .ship{\n    background-color: gray;\n}\n.player .board .row .miss{\n    background-color: white;\n}\n.player .board .row .hit{\n    background-color: red;\n}\n.content-center{\n    /* sets the background color */\n    background-image: var(--board-background);\n    background-size: cover;\n\n    /* sets the border style */\n    border: 2px solid black;\n    border-radius: 5px;\n    /* sets the content-center */\n    min-width: 100px;\n    /* sets margin to match the player board sections */\n    margin: 1%;\n    /* positions elements in the center*/\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    flex-direction: column;\n}\n.content-center .content-alerts{\n    margin: 5px;\n    height: max-content;\n    max-width: 95px;\n    /* sets border */\n    border-radius: 5px;\n    /* align text to the center */\n    text-align: center;\n    font-size: 12px;\n    background-color: white;\n    border: 2px solid black;\n    padding: 5px;\n}\n\n.content-center .new-game{\n    /* sets border */\n    border-radius: 5px;\n\n    /* sets button dimensions */\n    height: max-content;\n    padding: 5px;\n    border: 2px solid black;\n    width: 60%;\n    background-color: white;\n    cursor: pointer;\n    transition: background-color 0.5s;\n}\n.content-center .new-game:hover{\n    background-color: var(--hover);\n}"],sourceRoot:""}]);const f=u},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],s=0;s<n.length;s++){var A=n[s],c=r.base?A[0]+r.base:A[0],l=o[c]||0,d="".concat(c," ").concat(l);o[c]=l+1;var u=t(d),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var h=a(p,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:h,references:1})}i.push(d)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var s=t(o[i]);e[s].references--}for(var A=r(n,a),c=0;c<o.length;c++){var l=t(o[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},453:(n,e,t)=>{n.exports=t.p+"ea6c654baea0cc0e70a0.jpg"},101:(n,e,t)=>{n.exports=t.p+"c4578fc4bd46df7823e7.png"},369:(n,e,t)=>{n.exports=t.p+"302b206cdbd881874d60.jpg"}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),a=t.n(r),o=t(569),i=t.n(o),s=t(565),A=t.n(s),c=t(216),l=t.n(c),d=t(589),u=t.n(d),p=t(772),h={};function b(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}h.styleTagTransform=u(),h.setAttributes=A(),h.insert=i().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=l(),e()(p.Z,h),p.Z&&p.Z.locals&&p.Z.locals;const f=function(){function n(e,t){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.length=e,this.hitCounter=0,this.coords=t}var e,t;return e=n,(t=[{key:"hit",value:function(){this.hitCounter+=1}},{key:"isSunk",value:function(){return this.length===this.hitCounter}}])&&b(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),n}();function C(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}const g=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.boardArray=[],this.shipArray=[],this.missedCoords=[]}var e,t;return e=n,(t=[{key:"genShipCoords",value:function(n){for(var e=this,t=[];t.length<n;){var r=Math.floor(10*Math.random()),a=Math.floor(10*Math.random()),o=Math.floor(2*Math.random());if(0===o&&r+n<10&&r+n>-1)for(var i=0;i<n;i+=1)t.push([r+i,a]);else if(1===o&&a+n<10&&a+n>-1)for(var s=0;s<n;s+=1)t.push([r,a+s]);var A=!1;t.forEach((function(n){"S"===e.boardArray[n[0]][n[1]]&&(A=!0)})),!0===A&&(t=[])}return t}},{key:"initBoard",value:function(){this.boardArray=[];for(var n=0;n<10;n+=1){for(var e=[],t=0;t<10;t+=1)e.push([]);this.boardArray.push(e)}}},{key:"findShip",value:function(n){for(var e=0;e<this.shipArray.length;e+=1)for(var t=0;t<this.shipArray[e].coords.length;t+=1)if(this.shipArray[e].coords[t][0]===n[0]&&this.shipArray[e].coords[t][1]===n[1])return this.shipArray[e];return!1}},{key:"placeShip",value:function(n){var e=this,t=new f(n.length,n);this.shipArray.push(t),n.forEach((function(n){e.boardArray[n[0]][n[1]]="S"}))}},{key:"recieveAttack",value:function(n){"S"===this.boardArray[n[0]][n[1]]?(this.boardArray[n[0]][n[1]]="H",this.findShip(n).hitCounter+=1):(this.boardArray[n[0]][n[1]]="M",this.missedCoords.push(n))}},{key:"isAllSunk",value:function(){return this.shipArray.every((function(n){return n.isSunk()}))}}])&&C(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),n}();function m(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}const y=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.isPlayer=e,this.Gameboard=new g,this.lastCpuAttack=null}var e,t;return e=n,(t=[{key:"cpuGenAttack",value:function(n){if(null!=this.lastCpuAttack){var e;if((e=[this.lastCpuAttack[0],this.lastCpuAttack[1]+1])[1]>-1&&e[1]<10&&"M"!==n.boardArray[e[0]][e[1]]&&"H"!==n.boardArray[e[0]][e[1]])return this.lastCpuAttack=null,e;if((e=[this.lastCpuAttack[0],this.lastCpuAttack[1]-1])[1]>-1&&e[1]<10&&"M"!==n.boardArray[e[0]][e[1]]&&"H"!==n.boardArray[e[0]][e[1]])return this.lastCpuAttack=null,e;if((e=[this.lastCpuAttack[0]-1,this.lastCpuAttack[1]])[0]>-1&&e[0]<10&&"M"!==n.boardArray[e[0]][e[1]]&&"H"!==n.boardArray[e[0]][e[1]])return this.lastCpuAttack=null,e;if((e=[this.lastCpuAttack[0]+1,this.lastCpuAttack[1]])[0]>-1&&e[0]<10&&"M"!==n.boardArray[e[0]][e[1]]&&"H"!==n.boardArray[e[0]][e[1]])return this.lastCpuAttack=null,e}for(var t,r,a=!1;!1===a;)t=Math.floor(10*Math.random()),r=Math.floor(10*Math.random()),"M"!==n.boardArray[t][r]&&"H"!==n.boardArray[t][r]&&(a=!0);return[t,r]}},{key:"cpuTurn",value:function(n){var e=this.cpuGenAttack(n);n.recieveAttack(e),"H"===n.boardArray[e[0]][e[1]]&&(this.lastCpuAttack=e)}},{key:"playerTurn",value:function(n,e){n.recieveAttack(e)}}])&&m(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),n}();function B(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}var v=function(){function n(e,t){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.player=e,this.isPlayer=t,this.boardElement=this.getBoard(),this.displayGrid()}var e,t;return e=n,t=[{key:"addSpaceListeners",value:function(n){var e=this;this.boardElement.querySelectorAll(".space").forEach((function(t){t.addEventListener("click",(function(){return t.classList.contains("miss")||t.classList.contains("hit")||(n.player.playerTurn(e.player.Gameboard,[9-parseInt(t.getAttribute("x")),parseInt(t.getAttribute("y"))]),e.displayGrid(),n.player.Gameboard.isAllSunk()||e.player.Gameboard.isAllSunk()?n.player.Gameboard.isAllSunk()?document.querySelector(".content-alerts").textContent="Game over CPU WINS":e.player.Gameboard.isAllSunk()&&(document.querySelector(".content-alerts").textContent="Game over PLAYER WINS"):e.addSpaceListeners(n),e.player.cpuTurn(n.player.Gameboard),n.displayGrid()),0}))}))}},{key:"getBoard",value:function(){return!0===this.isPlayer?document.querySelector("#player-board"):document.querySelector("#cpu-board")}},{key:"displayGrid",value:function(){this.boardElement.innerHTML="";for(var n=this.player.Gameboard.boardArray,e=0;e<10;e+=1){var t=document.createElement("div");t.setAttribute("index",9-e),t.setAttribute("class","row");for(var r=0;r<10;r+=1){var a=document.createElement("div");a.setAttribute("x",9-e),a.setAttribute("y",r),a.setAttribute("class","space"),"S"===n[e][r]&&!0===this.isPlayer&&a.classList.add("ship"),"M"===n[e][r]&&a.classList.add("miss"),"H"===n[e][r]&&a.classList.add("hit"),t.appendChild(a)}this.boardElement.appendChild(t)}}}],t&&B(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),n}();const I=v;var k,x,w=function(n,e,t,r){n=new y(!0),e=new y(!1),n.Gameboard.initBoard(),e.Gameboard.initBoard(),n.Gameboard.placeShip(n.Gameboard.genShipCoords(2)),n.Gameboard.placeShip(n.Gameboard.genShipCoords(3)),n.Gameboard.placeShip(n.Gameboard.genShipCoords(3)),n.Gameboard.placeShip(n.Gameboard.genShipCoords(4)),n.Gameboard.placeShip(n.Gameboard.genShipCoords(5)),e.Gameboard.placeShip(e.Gameboard.genShipCoords(2)),e.Gameboard.placeShip(e.Gameboard.genShipCoords(3)),e.Gameboard.placeShip(e.Gameboard.genShipCoords(3)),e.Gameboard.placeShip(e.Gameboard.genShipCoords(4)),e.Gameboard.placeShip(e.Gameboard.genShipCoords(5)),t=new I(n,!0),r=new I(e,!1),document.querySelector(".content-alerts").textContent="Welcome to Battleship!",r.addSpaceListeners(t)},S=new y(!0),E=new y(!1);document.querySelector(".new-game").addEventListener("click",(function(){w(S,E,k,x)})),w(S,E,k,x)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,