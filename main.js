(()=>{"use strict";var e={772:(e,n,t)=>{t.d(n,{Z:()=>f});var r=t(537),a=t.n(r),o=t(645),i=t.n(o),s=t(667),c=t.n(s),A=new URL(t(453),t.b),l=new URL(t(369),t.b),d=new URL(t(101),t.b),u=i()(a()),p=c()(A),h=c()(l),b=c()(d);u.push([e.id,":root{\n    --board-background: url("+p+");\n    --hover: rgb(182, 182, 182);\n}\n\n*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nbody{\n    /* Set the svg background to fill screen*/\n    height: 100vh;\n    background-image: url("+h+");\n    background-size: cover;\n\n    /* set background color behind the waves svg*/\n    background-color: whitesmoke;\n    \n    /* set header above content section */\n    display: flex;\n    flex-direction: column;\n}\n.header{\n    /* sets header to fill 100% width and 20% of the total\n    screen height*/\n    height: 20%;\n\n    /* position header text */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* change font size */\n    font-size: 70px;\n}\n.header img{\n    /* sets title image instead of using src in index.html */\n    content:url("+b+");\n}\n.content{\n    /* sets the content to fill 100% of the remaining space */\n    flex-grow: 1;\n\n    /* positions the content elements to be player || content || cpu */\n    display: flex;\n    justify-content: space-around;\n}\n.player{\n    /* sets each player to fill 100% of the remaining space */\n    flex-grow: 1;\n\n    /* sets the player title above the player board */\n    display: flex;\n    flex-direction: column;\n}\n.player .title{\n    /* Sets the background color for the title div*/\n    background-image: var(--board-background);\n    background-size: cover;\n\n    /* sets the title to be 100% width and 10% player div height */\n    height: 10%;\n\n    /* sets the margin to 50px */\n    margin: 50px;\n\n    /* sets padding to 20px */\n    padding: 20px;\n\n    /* sets border */\n    border: 4px solid black;\n    border-radius: 20px;\n\n    /* positions title */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* font color and size */\n    color: rgb(0, 0, 0);\n    font-size: 30px;\n    font-weight: bold;\n}\n.player .board{\n    /* fills the remaining space with the game board */\n    flex-grow: 1;\n\n    /* sets a margin for the game board */\n    margin: 50px;\n\n    /* sets padding to 20px */\n    padding: 20px;\n    \n    /* sets board background color */\n    background-image: var(--board-background);\n    background-size: cover;\n\n    /* sets border */\n    border: 4px solid black;\n    border-radius: 20px;\n\n    /* positions rows */\n    display: flex;\n    flex-direction: column;\n}\n.player .row{\n    /* grows each row to fit available space on board div */\n    flex-grow: 1;\n\n    display: flex;\n}\n.player .space{\n    border: 2px solid black;\n    /* make spaces fill entire row */\n    flex-grow: 1;\n    height: 100%;\n}\n.player .space:hover{\n    background-color: var(--hover);\n}\n.player .board .row .ship{\n    background-color: gray;\n}\n.player .board .row .miss{\n    background-color: white;\n}\n.player .board .row .hit{\n    background-color: red;\n}\n.content-center{\n    /* sets the background color */\n    background-image: var(--board-background);\n    background-size: cover;\n\n    /* sets the border style */\n    border: 4px solid black;\n    border-radius: 20px;\n    /* sets the content-center */\n    width: 10%;\n\n    /* sets padding */\n    padding: 20px;\n    \n    /* sets margin to match the player board sections */\n    margin-top: 10%;\n    margin: 50px;\n    /* positions elements in the center*/\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    flex-direction: column;\n}\n.content-center .content-alerts{\n    /* sets background */\n    background-color: aliceblue;\n\n    /* sets border */\n    border: 2px solid black;\n    border-radius: 5px;\n\n    /* align text to the center */\n    text-align: center;\n}\n\n.content-center .new-game{\n    /* sets background */\n    background-color: aliceblue;\n\n    /* sets border */\n    border: 2px solid black;\n    border-radius: 5px;\n\n    /* sets button dimensions */\n    height: 7%;\n    width: 60%;\n}\n.content-center .new-game:hover{\n    background-color: var(--hover);\n}","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;IACI,2DAAsD;IACtD,2BAA2B;AAC/B;;AAEA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;AACA;IACI,yCAAyC;IACzC,aAAa;IACb,yDAA4C;IAC5C,sBAAsB;;IAEtB,6CAA6C;IAC7C,4BAA4B;;IAE5B,qCAAqC;IACrC,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI;kBACc;IACd,WAAW;;IAEX,yBAAyB;IACzB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;IAEnB,qBAAqB;IACrB,eAAe;AACnB;AACA;IACI,wDAAwD;IACxD,+CAAkC;AACtC;AACA;IACI,yDAAyD;IACzD,YAAY;;IAEZ,kEAAkE;IAClE,aAAa;IACb,6BAA6B;AACjC;AACA;IACI,yDAAyD;IACzD,YAAY;;IAEZ,iDAAiD;IACjD,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI,+CAA+C;IAC/C,yCAAyC;IACzC,sBAAsB;;IAEtB,8DAA8D;IAC9D,WAAW;;IAEX,4BAA4B;IAC5B,YAAY;;IAEZ,yBAAyB;IACzB,aAAa;;IAEb,gBAAgB;IAChB,uBAAuB;IACvB,mBAAmB;;IAEnB,oBAAoB;IACpB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;IAEnB,wBAAwB;IACxB,mBAAmB;IACnB,eAAe;IACf,iBAAiB;AACrB;AACA;IACI,kDAAkD;IAClD,YAAY;;IAEZ,qCAAqC;IACrC,YAAY;;IAEZ,yBAAyB;IACzB,aAAa;;IAEb,gCAAgC;IAChC,yCAAyC;IACzC,sBAAsB;;IAEtB,gBAAgB;IAChB,uBAAuB;IACvB,mBAAmB;;IAEnB,mBAAmB;IACnB,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI,uDAAuD;IACvD,YAAY;;IAEZ,aAAa;AACjB;AACA;IACI,uBAAuB;IACvB,gCAAgC;IAChC,YAAY;IACZ,YAAY;AAChB;AACA;IACI,8BAA8B;AAClC;AACA;IACI,sBAAsB;AAC1B;AACA;IACI,uBAAuB;AAC3B;AACA;IACI,qBAAqB;AACzB;AACA;IACI,8BAA8B;IAC9B,yCAAyC;IACzC,sBAAsB;;IAEtB,0BAA0B;IAC1B,uBAAuB;IACvB,mBAAmB;IACnB,4BAA4B;IAC5B,UAAU;;IAEV,iBAAiB;IACjB,aAAa;;IAEb,mDAAmD;IACnD,eAAe;IACf,YAAY;IACZ,oCAAoC;IACpC,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,sBAAsB;AAC1B;AACA;IACI,oBAAoB;IACpB,2BAA2B;;IAE3B,gBAAgB;IAChB,uBAAuB;IACvB,kBAAkB;;IAElB,6BAA6B;IAC7B,kBAAkB;AACtB;;AAEA;IACI,oBAAoB;IACpB,2BAA2B;;IAE3B,gBAAgB;IAChB,uBAAuB;IACvB,kBAAkB;;IAElB,2BAA2B;IAC3B,UAAU;IACV,UAAU;AACd;AACA;IACI,8BAA8B;AAClC",sourcesContent:[":root{\n    --board-background: url('../assets/diamond-plate.jpg');\n    --hover: rgb(182, 182, 182);\n}\n\n*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nbody{\n    /* Set the svg background to fill screen*/\n    height: 100vh;\n    background-image: url('../assets/waves.jpg');\n    background-size: cover;\n\n    /* set background color behind the waves svg*/\n    background-color: whitesmoke;\n    \n    /* set header above content section */\n    display: flex;\n    flex-direction: column;\n}\n.header{\n    /* sets header to fill 100% width and 20% of the total\n    screen height*/\n    height: 20%;\n\n    /* position header text */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* change font size */\n    font-size: 70px;\n}\n.header img{\n    /* sets title image instead of using src in index.html */\n    content:url(\"../assets/title.png\");\n}\n.content{\n    /* sets the content to fill 100% of the remaining space */\n    flex-grow: 1;\n\n    /* positions the content elements to be player || content || cpu */\n    display: flex;\n    justify-content: space-around;\n}\n.player{\n    /* sets each player to fill 100% of the remaining space */\n    flex-grow: 1;\n\n    /* sets the player title above the player board */\n    display: flex;\n    flex-direction: column;\n}\n.player .title{\n    /* Sets the background color for the title div*/\n    background-image: var(--board-background);\n    background-size: cover;\n\n    /* sets the title to be 100% width and 10% player div height */\n    height: 10%;\n\n    /* sets the margin to 50px */\n    margin: 50px;\n\n    /* sets padding to 20px */\n    padding: 20px;\n\n    /* sets border */\n    border: 4px solid black;\n    border-radius: 20px;\n\n    /* positions title */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* font color and size */\n    color: rgb(0, 0, 0);\n    font-size: 30px;\n    font-weight: bold;\n}\n.player .board{\n    /* fills the remaining space with the game board */\n    flex-grow: 1;\n\n    /* sets a margin for the game board */\n    margin: 50px;\n\n    /* sets padding to 20px */\n    padding: 20px;\n    \n    /* sets board background color */\n    background-image: var(--board-background);\n    background-size: cover;\n\n    /* sets border */\n    border: 4px solid black;\n    border-radius: 20px;\n\n    /* positions rows */\n    display: flex;\n    flex-direction: column;\n}\n.player .row{\n    /* grows each row to fit available space on board div */\n    flex-grow: 1;\n\n    display: flex;\n}\n.player .space{\n    border: 2px solid black;\n    /* make spaces fill entire row */\n    flex-grow: 1;\n    height: 100%;\n}\n.player .space:hover{\n    background-color: var(--hover);\n}\n.player .board .row .ship{\n    background-color: gray;\n}\n.player .board .row .miss{\n    background-color: white;\n}\n.player .board .row .hit{\n    background-color: red;\n}\n.content-center{\n    /* sets the background color */\n    background-image: var(--board-background);\n    background-size: cover;\n\n    /* sets the border style */\n    border: 4px solid black;\n    border-radius: 20px;\n    /* sets the content-center */\n    width: 10%;\n\n    /* sets padding */\n    padding: 20px;\n    \n    /* sets margin to match the player board sections */\n    margin-top: 10%;\n    margin: 50px;\n    /* positions elements in the center*/\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    flex-direction: column;\n}\n.content-center .content-alerts{\n    /* sets background */\n    background-color: aliceblue;\n\n    /* sets border */\n    border: 2px solid black;\n    border-radius: 5px;\n\n    /* align text to the center */\n    text-align: center;\n}\n\n.content-center .new-game{\n    /* sets background */\n    background-color: aliceblue;\n\n    /* sets border */\n    border: 2px solid black;\n    border-radius: 5px;\n\n    /* sets button dimensions */\n    height: 7%;\n    width: 60%;\n}\n.content-center .new-game:hover{\n    background-color: var(--hover);\n}"],sourceRoot:""}]);const f=u},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var A=0;A<e.length;A++){var l=[].concat(e[A]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],s=0;s<e.length;s++){var c=e[s],A=r.base?c[0]+r.base:c[0],l=o[A]||0,d="".concat(A," ").concat(l);o[A]=l+1;var u=t(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var h=a(p,r);r.byIndex=s,n.splice(s,0,{identifier:d,updater:h,references:1})}i.push(d)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=t(o[i]);n[s].references--}for(var c=r(e,a),A=0;A<o.length;A++){var l=t(o[A]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}o=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},453:(e,n,t)=>{e.exports=t.p+"ea6c654baea0cc0e70a0.jpg"},101:(e,n,t)=>{e.exports=t.p+"c4578fc4bd46df7823e7.png"},369:(e,n,t)=>{e.exports=t.p+"302b206cdbd881874d60.jpg"}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),a=t.n(r),o=t(569),i=t.n(o),s=t(565),c=t.n(s),A=t(216),l=t.n(A),d=t(589),u=t.n(d),p=t(772),h={};function b(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}h.styleTagTransform=u(),h.setAttributes=c(),h.insert=i().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=l(),n()(p.Z,h),p.Z&&p.Z.locals&&p.Z.locals;const f=function(){function e(n,t){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.length=n,this.hitCounter=0,this.coords=t}var n,t;return n=e,(t=[{key:"hit",value:function(){this.hitCounter+=1}},{key:"isSunk",value:function(){return this.length===this.hitCounter}}])&&b(n.prototype,t),Object.defineProperty(n,"prototype",{writable:!1}),e}();function g(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const C=function(){function e(){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.boardArray=[],this.shipArray=[],this.missedCoords=[]}var n,t;return n=e,(t=[{key:"genShipCoords",value:function(e){for(var n=this,t=[];t.length<e;){var r=Math.floor(10*Math.random()),a=Math.floor(10*Math.random()),o=Math.floor(2*Math.random());if(0===o&&r+e<10&&r+e>-1)for(var i=0;i<e;i+=1)t.push([r+i,a]);else if(1===o&&a+e<10&&a+e>-1)for(var s=0;s<e;s+=1)t.push([r,a+s]);t.forEach((function(e){"S"===n.boardArray[e[0]][e[1]]&&(t=[])}))}return t}},{key:"initBoard",value:function(){this.boardArray=[];for(var e=0;e<10;e+=1){for(var n=[],t=0;t<10;t+=1)n.push([]);this.boardArray.push(n)}}},{key:"findShip",value:function(e){for(var n=0;n<this.shipArray.length;n+=1)for(var t=0;t<this.shipArray[n].coords.length;t+=1)if(this.shipArray[n].coords[t][0]===e[0]&&this.shipArray[n].coords[t][1]===e[1])return this.shipArray[n];return!1}},{key:"placeShip",value:function(e){var n=this,t=new f(e.length,e);this.shipArray.push(t),e.forEach((function(e){n.boardArray[e[0]][e[1]]="S"}))}},{key:"recieveAttack",value:function(e){"S"===this.boardArray[e[0]][e[1]]?(this.boardArray[e[0]][e[1]]="H",this.findShip(e).hitCounter+=1):(this.boardArray[e[0]][e[1]]="M",this.missedCoords.push(e))}},{key:"isAllSunk",value:function(){return this.shipArray.every((function(e){return e.isSunk()}))}}])&&g(n.prototype,t),Object.defineProperty(n,"prototype",{writable:!1}),e}();function y(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const m=function(){function e(n){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.isPlayer=n,this.Gameboard=new C,this.lastCpuAttack=null}var n,t;return n=e,(t=[{key:"cpuGenAttack",value:function(e){if(null!=this.lastCpuAttack){var n;if((n=[this.lastCpuAttack[0],this.lastCpuAttack[1]+1])[1]>-1&&n[1]<10&&"M"!==e.boardArray[n[0]][n[1]]&&"H"!==e.boardArray[n[0]][n[1]])return this.lastCpuAttack=null,n;if((n=[this.lastCpuAttack[0],this.lastCpuAttack[1]-1])[1]>-1&&n[1]<10&&"M"!==e.boardArray[n[0]][n[1]]&&"H"!==e.boardArray[n[0]][n[1]])return this.lastCpuAttack=null,n;if((n=[this.lastCpuAttack[0]-1,this.lastCpuAttack[1]])[0]>-1&&n[0]<10&&"M"!==e.boardArray[n[0]][n[1]]&&"H"!==e.boardArray[n[0]][n[1]])return this.lastCpuAttack=null,n;if((n=[this.lastCpuAttack[0]+1,this.lastCpuAttack[1]])[0]>-1&&n[0]<10&&"M"!==e.boardArray[n[0]][n[1]]&&"H"!==e.boardArray[n[0]][n[1]])return this.lastCpuAttack=null,n}for(var t,r,a=!1;!1===a;)t=Math.floor(10*Math.random()),r=Math.floor(10*Math.random()),"M"!==e.boardArray[t][r]&&"H"!==e.boardArray[t][r]&&(a=!0);return[t,r]}},{key:"cpuTurn",value:function(e){var n=this.cpuGenAttack(e);e.recieveAttack(n),"H"==e.boardArray[n[0]][n[1]]&&(this.lastCpuAttack=n)}},{key:"playerTurn",value:function(e,n){e.recieveAttack(n)}}])&&y(n.prototype,t),Object.defineProperty(n,"prototype",{writable:!1}),e}();function B(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var v=function(){function e(n,t){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.player=n,this.isPlayer=t,this.boardElement=this.getBoard(),this.displayGrid()}var n,t;return n=e,t=[{key:"addSpaceListeners",value:function(e){var n=this;this.boardElement.querySelectorAll(".space").forEach((function(t){t.addEventListener("click",(function(){if(t.classList.contains("miss")||t.classList.contains("hit"))return 0;e.player.playerTurn(n.player.Gameboard,[9-parseInt(t.getAttribute("x")),parseInt(t.getAttribute("y"))]),n.displayGrid(),e.player.Gameboard.isAllSunk()||n.player.Gameboard.isAllSunk()?e.player.Gameboard.isAllSunk()?document.querySelector(".content-alerts").textContent="Game over CPU WINS":n.player.Gameboard.isAllSunk()&&(document.querySelector(".content-alerts").textContent="Game over PLAYER WINS"):n.addSpaceListeners(e),n.player.cpuTurn(e.player.Gameboard),e.displayGrid()}))}))}},{key:"getBoard",value:function(){return!0===this.isPlayer?document.querySelector("#player-board"):document.querySelector("#cpu-board")}},{key:"displayGrid",value:function(){this.boardElement.innerHTML="";for(var e=this.player.Gameboard.boardArray,n=0;n<10;n+=1){var t=document.createElement("div");t.setAttribute("index",9-n),t.setAttribute("class","row");for(var r=0;r<10;r+=1){var a=document.createElement("div");a.setAttribute("x",9-n),a.setAttribute("y",r),a.setAttribute("class","space"),"S"===e[n][r]&&!0===this.isPlayer&&a.classList.add("ship"),"M"===e[n][r]&&a.classList.add("miss"),"H"===e[n][r]&&a.classList.add("hit"),t.appendChild(a)}this.boardElement.appendChild(t)}}}],t&&B(n.prototype,t),Object.defineProperty(n,"prototype",{writable:!1}),e}();const I=v;var k,x,w=function(e,n,t,r){e=new m(!0),n=new m(!1),e.Gameboard.initBoard(),n.Gameboard.initBoard(),e.Gameboard.placeShip(e.Gameboard.genShipCoords(2)),e.Gameboard.placeShip(e.Gameboard.genShipCoords(3)),e.Gameboard.placeShip(e.Gameboard.genShipCoords(3)),e.Gameboard.placeShip(e.Gameboard.genShipCoords(4)),e.Gameboard.placeShip(e.Gameboard.genShipCoords(5)),n.Gameboard.placeShip(n.Gameboard.genShipCoords(2)),n.Gameboard.placeShip(n.Gameboard.genShipCoords(3)),n.Gameboard.placeShip(n.Gameboard.genShipCoords(3)),n.Gameboard.placeShip(n.Gameboard.genShipCoords(4)),n.Gameboard.placeShip(n.Gameboard.genShipCoords(5)),t=new I(e,!0),r=new I(n,!1),document.querySelector(".content-alerts").textContent="Welcome to Battleship!",r.addSpaceListeners(t)},S=new m(!0),E=new m(!1);document.querySelector(".new-game").addEventListener("click",(function(){w(S,E,k,x)})),w(S,E,k,x)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,